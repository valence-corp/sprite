{
	"id": 0,
	"name": "@valence-corp/sprite",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 125,
			"name": "DocumentModality",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Handles the operations related to document records in the database.\nIt wraps the methods of the SpriteOperations class with types."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "client",
						"content": [
							{
								"kind": "text",
								"text": "The instance of Database to target"
							}
						]
					},
					{
						"tag": "@param",
						"name": "operators",
						"content": [
							{
								"kind": "text",
								"text": "The operators instance to use"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 126,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/DocumentModality.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 127,
							"name": "new DocumentModality",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/DocumentModality.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L18"
								}
							],
							"typeParameter": [
								{
									"id": 128,
									"name": "S",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 129,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "SpriteDatabase",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 130,
									"name": "dialect",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/SqlDialect.ts",
											"qualifiedName": "SqlDialect"
										},
										"name": "SqlDialect",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 125,
								"typeArguments": [
									{
										"type": "reference",
										"target": 128,
										"name": "S",
										"package": "@valence-corp/sprite",
										"qualifiedName": "DocumentModality.S",
										"refersToTypeParameter": true
									}
								],
								"name": "DocumentModality",
								"package": "@valence-corp/sprite"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase<S>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase<S>.constructor"
					}
				},
				{
					"id": 143,
					"name": "_database",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 16,
							"character": 12,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "SpriteDatabase",
						"package": "@valence-corp/sprite"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase._database"
					}
				},
				{
					"id": 144,
					"name": "_sql",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/SqlDialect.ts",
							"qualifiedName": "SqlDialect"
						},
						"name": "SqlDialect",
						"package": "@valence-corp/sprite"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase._sql"
					}
				},
				{
					"id": 137,
					"name": "createType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/DocumentModality.ts",
							"line": 105,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L105"
						}
					],
					"signatures": [
						{
							"id": 138,
							"name": "createType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new document type in the schema."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an instance of SpriteType."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the type could not be created."
											}
										]
									},
									{
										"tag": "@note",
										"content": [
											{
												"kind": "text",
												"text": "non-idempotent commands (such a creating types) must be issued as part of a transaction"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new Database({\n  username: 'root',\n  password: 'rootPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\ninterface DocumentTypes {\n  aDocument: {\n    aProperty: string\n  }\n}\n\nconst client = database.documentModality<DocumentTypes>();\n\nasync function createDocumentTypeExample() {\n  try {\n    // non-idempotent operations must be conducted within a transaction\n    client.transaction(async (trx)=>{\n      const type = await client.createType('aDocument', trx);\n      console.log(type.name);\n      // 'aType'\n    });\n  } catch (error) {\n    // handle error conditions\n    console.error(error);\n  }\n};\n\ncreateDocumentTypeExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/DocumentModality.ts",
									"line": 105,
									"character": 15,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L105"
								}
							],
							"typeParameter": [
								{
									"id": 139,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 140,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the type to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 139,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 141,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 142,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to create the type with."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 301,
										"typeArguments": [
											{
												"type": "reference",
												"target": 128,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "DocumentModality.S",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 139,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteCreateTypeOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/SpriteType.ts",
											"qualifiedName": "SpriteType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 128,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "DocumentModality.S",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 139,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "SpriteType",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 164,
					"name": "deleteFrom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 130,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 165,
							"name": "deleteFrom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete records of a certain type, target specific records\nusing the "
									},
									{
										"kind": "code",
										"text": "`where`"
									},
									{
										"kind": "text",
										"text": " property of the options argument."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The count of the records deleted."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the records could not be deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function deleteFromExample() {\n  try {\n    await client.transaction(async (trx) => {\n      const result = await client.deleteFrom('aType', trx, {\n        where: ['aField', '!=', 'aValue']\n      });\n      console.log(result);\n      // returns the number of records deleted\n      // as a result of the operation\n      // { count: x }\n    });\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\ndeleteFromExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 130,
									"character": 15,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L130"
								}
							],
							"typeParameter": [
								{
									"id": 166,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 167,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 168,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The typename of the record to delete."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 166,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 169,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 170,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options to configure the deleteFrom command."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 382,
										"typeArguments": [
											{
												"type": "reference",
												"target": 128,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "DocumentModality.S",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 166,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 167,
												"name": "P",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteDeleteFromOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 517,
										"name": "DeleteFromCount",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.deleteFrom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.deleteFrom"
					}
				},
				{
					"id": 171,
					"name": "deleteOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 174,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L174"
						}
					],
					"signatures": [
						{
							"id": 172,
							"name": "deleteOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a specific record by providing the "
									},
									{
										"kind": "code",
										"text": "`rid`"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the record was deleted."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the record was not deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function deleteOneExample() {\n  try {\n    await client.transaction(async (trx) => {\n      const result = await client.deleteOne('#0:0', trx);\n      console.log(result);\n      // number of records deleted as a result\n      // of the operation\n      // { count: 1 }\n    });\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\ndeleteOneExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 174,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L174"
								}
							],
							"parameters": [
								{
									"id": 173,
									"name": "rid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RID of the record to delete."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 174,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 517,
										"name": "DeleteFromCount",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.deleteOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.deleteOne"
					}
				},
				{
					"id": 151,
					"name": "dropType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 152,
							"name": "dropType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 28,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L28"
								}
							],
							"typeParameter": [
								{
									"id": 153,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 154,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 153,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 155,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 156,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 314,
										"name": "ISpriteDropTypeOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.dropType"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.dropType"
					}
				},
				{
					"id": 131,
					"name": "newDocument",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/DocumentModality.ts",
							"line": 60,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L60"
						}
					],
					"signatures": [
						{
							"id": 132,
							"name": "newDocument",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Insert a new document into the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The record that is created in the database."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "createType"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new Database({\n  username: 'root',\n  password: 'rootPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\ninterface DocumentTypes {\n  aDocument: {\n    aProperty: string\n  }\n}\n\nconst client = database.documentModality<DocumentTypes>();\n\n// non-idempotent operations must be conducted within a transaction\nclient.transaction(async (trx)=>{\n  // to create a document, a type must be created first\n  await client.createType('aDocument', trx);\n  const document = await client.newDocument('aDocument', trx, {\n    aProperty: 'aValue',\n  });\n  console.log(document);\n  // {\n  //   '@rid': '#0:0',\n  //   '@cat': 'd',\n  //   '@type': 'aDocument',\n  //   aProperty: 'aValue'\n  // }\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/DocumentModality.ts",
									"line": 60,
									"character": 16,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L60"
								}
							],
							"typeParameter": [
								{
									"id": 133,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 134,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 133,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 135,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 136,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options for the document insertion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 310,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 133,
													"name": "N",
													"package": "@valence-corp/sprite",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 128,
													"name": "S",
													"package": "@valence-corp/sprite",
													"qualifiedName": "DocumentModality.S",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "ISpriteInsertRecordOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 133,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 128,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "DocumentModality.S",
												"refersToTypeParameter": true
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 157,
					"name": "newTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 158,
							"name": "newTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 33,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L33"
								}
							],
							"parameters": [
								{
									"id": 159,
									"name": "isolationLevel",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/transaction.ts",
											"qualifiedName": "ArcadeTransactionIsolationLevel"
										},
										"name": "ArcadeTransactionIsolationLevel",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.newTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.newTransaction"
					}
				},
				{
					"id": 145,
					"name": "selectFrom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 146,
							"name": "selectFrom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 22,
									"character": 15,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L22"
								}
							],
							"typeParameter": [
								{
									"id": 147,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 148,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 149,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 147,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 150,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 358,
										"typeArguments": [
											{
												"type": "reference",
												"target": 128,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "DocumentModality.S",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 147,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 148,
												"name": "P",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteSelectFromOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 147,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 128,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "DocumentModality.S",
												"refersToTypeParameter": true
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.selectFrom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.selectFrom"
					}
				},
				{
					"id": 181,
					"name": "selectOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 263,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L263"
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "selectOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select a specific record by providing the "
									},
									{
										"kind": "code",
										"text": "`rid`"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The ArcadeDB record (if it was found)."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the record was not found."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function selectOneExample() {\n  try {\n    const result = await client.selectOne<'aType'>('#0:0');\n    console.log(result);\n    // {\n    //   '@rid': '#0:0',\n    //   '@type': 'aType',\n    //   '@cat': 'd',\n    //   aField: 'aValue'\n    // }\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\nselectOneExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 263,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L263"
								}
							],
							"typeParameter": [
								{
									"id": 183,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 184,
									"name": "rid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RID of the record to select."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": 183,
											"name": "N",
											"package": "@valence-corp/sprite",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 128,
											"name": "S",
											"package": "@valence-corp/sprite",
											"qualifiedName": "DocumentModality.S",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.selectOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.selectOne"
					}
				},
				{
					"id": 160,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 161,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Helps to manage a transaction, by automatically invoking "
									},
									{
										"kind": "code",
										"text": "`newTransation`"
									},
									{
										"kind": "text",
										"text": ",\nand passing the returned "
									},
									{
										"kind": "code",
										"text": "`SpriteTransaction`"
									},
									{
										"kind": "text",
										"text": " to a callback as an argument,\nto be passed to non-idempotent databases operations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function transactionExample() {\n  try {\n    const transaction = await client.transaction(async (trx) => {\n      client.createType('aType', trx);\n    });\n    console.log(transaction.id);\n    // 'AS-0000000-0000-0000-0000-00000000000'\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\ntransactionExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 74,
									"character": 16,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L74"
								}
							],
							"parameters": [
								{
									"id": 162,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 317,
										"name": "SpriteTransactionCallback",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 163,
									"name": "isolationLevel",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/transaction.ts",
											"qualifiedName": "ArcadeTransactionIsolationLevel"
										},
										"name": "ArcadeTransactionIsolationLevel",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.transaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.transaction"
					}
				},
				{
					"id": 175,
					"name": "updateOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 218,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 176,
							"name": "updateOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update one record in the database, by providing an RID."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function updateOneExample() {\n  try {\n    await client.transaction(async (trx) => {\n      const result = await client.updateOne('#0:0', { aField: 'aValue' }, trx);\n      console.log(result);\n      // {\n      //   '@rid': '#0:0',\n      //   '@type': 'aType',\n      //   '@cat': 'd',\n      //   aField: 'aValue'\n      // }\n    });\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\nupdateOneExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 218,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L218"
								}
							],
							"typeParameter": [
								{
									"id": 177,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 178,
									"name": "rid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RID of the record to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 179,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data to replace within the record."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 308,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 177,
													"name": "N",
													"package": "@valence-corp/sprite",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 128,
													"name": "S",
													"package": "@valence-corp/sprite",
													"qualifiedName": "DocumentModality.S",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "OmitMeta",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 180,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to conduct the update operation within"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 521,
										"name": "RecordOperationResponse",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.updateOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.updateOne"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						126
					]
				},
				{
					"title": "Properties",
					"children": [
						143,
						144
					]
				},
				{
					"title": "Methods",
					"children": [
						137,
						164,
						171,
						151,
						131,
						157,
						145,
						181,
						160,
						175
					]
				}
			],
			"sources": [
				{
					"fileName": "modes/DocumentModality.ts",
					"line": 17,
					"character": 6,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/DocumentModality.ts#L17"
				}
			],
			"typeParameters": [
				{
					"id": 185,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/modes/ModalityBase.ts",
						"qualifiedName": "ModalityBase"
					},
					"typeArguments": [
						{
							"type": "reference",
							"target": 128,
							"name": "S",
							"package": "@valence-corp/sprite",
							"qualifiedName": "DocumentModality.S",
							"refersToTypeParameter": true
						}
					],
					"name": "ModalityBase",
					"package": "@valence-corp/sprite"
				}
			]
		},
		{
			"id": 186,
			"name": "GraphModality",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A window to a specific graph set.\nMandatory type parameters for the graph elements to target."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "client",
						"content": [
							{
								"kind": "text",
								"text": "The instance of SpriteDatabase to target"
							}
						]
					},
					{
						"tag": "@param",
						"name": "operators",
						"content": [
							{
								"kind": "text",
								"text": "The operators instance to use"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 187,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/GraphModality.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 188,
							"name": "new GraphModality",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/GraphModality.ts",
									"line": 23,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L23"
								}
							],
							"typeParameter": [
								{
									"id": 189,
									"name": "V",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 190,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 191,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "SpriteDatabase",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 192,
									"name": "dialect",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/SqlDialect.ts",
											"qualifiedName": "SqlDialect"
										},
										"name": "SqlDialect",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 186,
								"typeArguments": [
									{
										"type": "reference",
										"target": 189,
										"name": "V",
										"package": "@valence-corp/sprite",
										"qualifiedName": "GraphModality.V",
										"refersToTypeParameter": true
									},
									{
										"type": "reference",
										"target": 190,
										"name": "E",
										"package": "@valence-corp/sprite",
										"qualifiedName": "GraphModality.E",
										"refersToTypeParameter": true
									}
								],
								"name": "GraphModality",
								"package": "@valence-corp/sprite"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase<V & E>.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase<V & E>.constructor"
					}
				},
				{
					"id": 221,
					"name": "_database",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 16,
							"character": 12,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "SpriteDatabase",
						"package": "@valence-corp/sprite"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase._database"
					}
				},
				{
					"id": 222,
					"name": "_sql",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isProtected": true
					},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L17"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/SqlDialect.ts",
							"qualifiedName": "SqlDialect"
						},
						"name": "SqlDialect",
						"package": "@valence-corp/sprite"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase._sql"
					}
				},
				{
					"id": 209,
					"name": "createEdgeType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/GraphModality.ts",
							"line": 191,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L191"
						}
					],
					"signatures": [
						{
							"id": 210,
							"name": "createEdgeType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new edge type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an instance of SpriteType."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the type could not be created."
											}
										]
									},
									{
										"tag": "@note",
										"content": [
											{
												"kind": "text",
												"text": "non-idempotent commands (such a creating types) must be issued as part of a transaction"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst db = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype VertexTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\ntype EdgeTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\nconst client = db.graphModality<VertexTypes, EdgeTypes>();\n\nasync function createEdgeTypeExample() {\n  try {\n    // non-idempotent operations must be conducted within a transaction\n    client.transaction(async (trx)=>{\n      const type = await client.createEdgeType('aType', trx);\n      console.log(type.name);\n      // 'aType'\n    });\n  } catch (error) {\n    // handle error conditions\n    console.error(error);\n  }\n};\n\ncreateEdgeTypeExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/GraphModality.ts",
									"line": 191,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L191"
								}
							],
							"typeParameter": [
								{
									"id": 211,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 212,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the type to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 211,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 213,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 214,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to create the type with."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 301,
										"typeArguments": [
											{
												"type": "reference",
												"target": 190,
												"name": "E",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.E",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 211,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteCreateTypeOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/SpriteType.ts",
											"qualifiedName": "SpriteType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 190,
												"name": "E",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.E",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 211,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "SpriteType",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 215,
					"name": "createVertexType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/GraphModality.ts",
							"line": 242,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L242"
						}
					],
					"signatures": [
						{
							"id": 216,
							"name": "createVertexType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a new vertex type."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "an instance of SpriteType."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the type could not be created."
											}
										]
									},
									{
										"tag": "@note",
										"content": [
											{
												"kind": "text",
												"text": "non-idempotent commands (such a creating types) must be issued as part of a transaction"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst db = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype VertexTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\ntype EdgeTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\nconst client = db.graphModality<VertexTypes, EdgeTypes>();\n\nasync function createVertexTypeExample() {\n  try {\n    // non-idempotent operations must be conducted within a transaction\n    client.transaction(async (trx)=>{\n      const type = await client.createVertexType('aType', trx);\n      console.log(type.name);\n      // 'aType'\n    });\n  } catch (error) {\n    // handle error conditions\n    console.error(error);\n  }\n};\n\ncreateVertexTypeExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/GraphModality.ts",
									"line": 242,
									"character": 21,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L242"
								}
							],
							"typeParameter": [
								{
									"id": 217,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 218,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the type to create."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 217,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 219,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 220,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Options to create the type with."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 301,
										"typeArguments": [
											{
												"type": "reference",
												"target": 189,
												"name": "V",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.V",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 217,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteCreateTypeOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": {
											"sourceFileName": "src/SpriteType.ts",
											"qualifiedName": "SpriteType"
										},
										"typeArguments": [
											{
												"type": "reference",
												"target": 189,
												"name": "V",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.V",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 217,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "SpriteType",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 242,
					"name": "deleteFrom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 130,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L130"
						}
					],
					"signatures": [
						{
							"id": 243,
							"name": "deleteFrom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete records of a certain type, target specific records\nusing the "
									},
									{
										"kind": "code",
										"text": "`where`"
									},
									{
										"kind": "text",
										"text": " property of the options argument."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The count of the records deleted."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the records could not be deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function deleteFromExample() {\n  try {\n    await client.transaction(async (trx) => {\n      const result = await client.deleteFrom('aType', trx, {\n        where: ['aField', '!=', 'aValue']\n      });\n      console.log(result);\n      // returns the number of records deleted\n      // as a result of the operation\n      // { count: x }\n    });\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\ndeleteFromExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 130,
									"character": 15,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L130"
								}
							],
							"typeParameter": [
								{
									"id": 244,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 245,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 246,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The typename of the record to delete."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 166,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 247,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 248,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options to configure the deleteFrom command."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 382,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 189,
														"name": "V",
														"package": "@valence-corp/sprite",
														"qualifiedName": "GraphModality.V",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 190,
														"name": "E",
														"package": "@valence-corp/sprite",
														"qualifiedName": "GraphModality.E",
														"refersToTypeParameter": true
													}
												]
											},
											{
												"type": "reference",
												"target": 166,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 167,
												"name": "P",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteDeleteFromOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 517,
										"name": "DeleteFromCount",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.deleteFrom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.deleteFrom"
					}
				},
				{
					"id": 249,
					"name": "deleteOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 174,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L174"
						}
					],
					"signatures": [
						{
							"id": 250,
							"name": "deleteOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Delete a specific record by providing the "
									},
									{
										"kind": "code",
										"text": "`rid`"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the record was deleted."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the record was not deleted."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function deleteOneExample() {\n  try {\n    await client.transaction(async (trx) => {\n      const result = await client.deleteOne('#0:0', trx);\n      console.log(result);\n      // number of records deleted as a result\n      // of the operation\n      // { count: 1 }\n    });\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\ndeleteOneExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 174,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L174"
								}
							],
							"parameters": [
								{
									"id": 251,
									"name": "rid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RID of the record to delete."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 252,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 517,
										"name": "DeleteFromCount",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.deleteOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.deleteOne"
					}
				},
				{
					"id": 229,
					"name": "dropType",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 230,
							"name": "dropType",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 28,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L28"
								}
							],
							"typeParameter": [
								{
									"id": 231,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 232,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 153,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 233,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 234,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 314,
										"name": "ISpriteDropTypeOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.dropType"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.dropType"
					}
				},
				{
					"id": 199,
					"name": "newEdge",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/GraphModality.ts",
							"line": 127,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L127"
						}
					],
					"signatures": [
						{
							"id": 200,
							"name": "newEdge",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Insert a new edge into the database."
									}
								],
								"blockTags": [
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "createEdgeType()"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "transaction()"
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The record that is created in the database."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst db = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype VertexTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\ntype EdgeTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\nconst client = db.graphModality<VertexTypes, EdgeTypes>();\n\n// non-idempotent operations must be conducted within a transaction\nclient.transaction(async ()=>{\n  // to create a edge, a type must be created first\n  await client.createType('anEdge');\n  const edge = await client.newEdge('anEdge', '#0:0', \"#1:0\", {\n    aProperty: 'aValue',\n  });\n  console.log(edge.data);\n  // {\n  //   '@rid': '#3:0',\n  //   '@cat': 'e',\n  //   '@type': 'anEdge',\n  //   '@in': '#0:0',\n  //   '@out': '#1:0',\n  //   aProperty: 'aValue'\n  // }\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/GraphModality.ts",
									"line": 127,
									"character": 12,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L127"
								}
							],
							"typeParameter": [
								{
									"id": 201,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 202,
									"name": "V1",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 203,
									"name": "V2",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 204,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 201,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 205,
									"name": "to",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vertex to which to create the edge."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 396,
										"typeArguments": [
											{
												"type": "reference",
												"target": 189,
												"name": "V",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.V",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 202,
												"name": "V1",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "SpriteEdgeVertexDescriptor",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 206,
									"name": "from",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The vertex from which to create the edge."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 396,
										"typeArguments": [
											{
												"type": "reference",
												"target": 189,
												"name": "V",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.V",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 203,
												"name": "V2",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "SpriteEdgeVertexDescriptor",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 207,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 208,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options for the edge insertion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 399,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 201,
													"name": "N",
													"package": "@valence-corp/sprite",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 190,
													"name": "E",
													"package": "@valence-corp/sprite",
													"qualifiedName": "GraphModality.E",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "ISpriteEdgeOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": 201,
											"name": "N",
											"package": "@valence-corp/sprite",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "reference",
											"target": 190,
											"name": "E",
											"package": "@valence-corp/sprite",
											"qualifiedName": "GraphModality.E",
											"refersToTypeParameter": true
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 235,
					"name": "newTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 236,
							"name": "newTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 33,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L33"
								}
							],
							"parameters": [
								{
									"id": 237,
									"name": "isolationLevel",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/transaction.ts",
											"qualifiedName": "ArcadeTransactionIsolationLevel"
										},
										"name": "ArcadeTransactionIsolationLevel",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.newTransaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.newTransaction"
					}
				},
				{
					"id": 193,
					"name": "newVertex",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/GraphModality.ts",
							"line": 72,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L72"
						}
					],
					"signatures": [
						{
							"id": 194,
							"name": "newVertex",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Insert a new vertex into the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The record that is created in the database."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "createVertexType()"
											},
											{
												"kind": "text",
												"text": "\n"
											},
											{
												"kind": "text",
												"text": " - "
											},
											{
												"kind": "text",
												"text": "transaction()"
											},
											{
												"kind": "text",
												"text": "\n"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst db = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype VertexTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\ntype EdgeTypes = {\n  aType: {\n    aProperty: string\n  }\n}\n\nconst client = db.graphModality<VertexTypes, EdgeTypes>();\n\n// non-idempotent operations must be conducted within a transaction\nclient.transaction(async (trx)=>{\n  // to create a vertex, a type must be created first\n  await client.createType('aVertex', trx);\n  const vertex = await client.newVertex('aVertex', trx, {\n    aProperty: 'aValue',\n  });\n  console.log(vertex);\n  // {\n  //   '@rid': '#0:0',\n  //   '@cat': 'v',\n  //   '@type': 'aVertex',\n  //   'aProperty': 'aValue'\n  // }\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/GraphModality.ts",
									"line": 72,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L72"
								}
							],
							"typeParameter": [
								{
									"id": 195,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 196,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 195,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 197,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 198,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The options for the vertex insertion."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 310,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 195,
													"name": "N",
													"package": "@valence-corp/sprite",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "reference",
													"target": 189,
													"name": "V",
													"package": "@valence-corp/sprite",
													"qualifiedName": "GraphModality.V",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "ISpriteInsertRecordOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 195,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 189,
												"name": "V",
												"package": "@valence-corp/sprite",
												"qualifiedName": "GraphModality.V",
												"refersToTypeParameter": true
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 223,
					"name": "selectFrom",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L22"
						}
					],
					"signatures": [
						{
							"id": 224,
							"name": "selectFrom",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 22,
									"character": 15,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L22"
								}
							],
							"typeParameter": [
								{
									"id": 225,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 226,
									"name": "P",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 227,
									"name": "typeName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 147,
										"name": "N",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 228,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": 358,
										"typeArguments": [
											{
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 189,
														"name": "V",
														"package": "@valence-corp/sprite",
														"qualifiedName": "GraphModality.V",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 190,
														"name": "E",
														"package": "@valence-corp/sprite",
														"qualifiedName": "GraphModality.E",
														"refersToTypeParameter": true
													}
												]
											},
											{
												"type": "reference",
												"target": 147,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											{
												"type": "reference",
												"target": 148,
												"name": "P",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ISpriteSelectFromOptions",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 147,
												"name": "N",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "intersection",
												"types": [
													{
														"type": "reference",
														"target": 189,
														"name": "V",
														"package": "@valence-corp/sprite",
														"qualifiedName": "GraphModality.V",
														"refersToTypeParameter": true
													},
													{
														"type": "reference",
														"target": 190,
														"name": "E",
														"package": "@valence-corp/sprite",
														"qualifiedName": "GraphModality.E",
														"refersToTypeParameter": true
													}
												]
											}
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.selectFrom"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.selectFrom"
					}
				},
				{
					"id": 259,
					"name": "selectOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 263,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L263"
						}
					],
					"signatures": [
						{
							"id": 260,
							"name": "selectOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Select a specific record by providing the "
									},
									{
										"kind": "code",
										"text": "`rid`"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The ArcadeDB record (if it was found)."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If the record was not found."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function selectOneExample() {\n  try {\n    const result = await client.selectOne<'aType'>('#0:0');\n    console.log(result);\n    // {\n    //   '@rid': '#0:0',\n    //   '@type': 'aType',\n    //   '@cat': 'd',\n    //   aField: 'aValue'\n    // }\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\nselectOneExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 263,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L263"
								}
							],
							"typeParameter": [
								{
									"id": 261,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 262,
									"name": "rid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RID of the record to select."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "indexedAccess",
										"indexType": {
											"type": "reference",
											"target": 183,
											"name": "N",
											"package": "@valence-corp/sprite",
											"refersToTypeParameter": true
										},
										"objectType": {
											"type": "intersection",
											"types": [
												{
													"type": "reference",
													"target": 189,
													"name": "V",
													"package": "@valence-corp/sprite",
													"qualifiedName": "GraphModality.V",
													"refersToTypeParameter": true
												},
												{
													"type": "reference",
													"target": 190,
													"name": "E",
													"package": "@valence-corp/sprite",
													"qualifiedName": "GraphModality.E",
													"refersToTypeParameter": true
												}
											]
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.selectOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.selectOne"
					}
				},
				{
					"id": 238,
					"name": "transaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L74"
						}
					],
					"signatures": [
						{
							"id": 239,
							"name": "transaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Helps to manage a transaction, by automatically invoking "
									},
									{
										"kind": "code",
										"text": "`newTransation`"
									},
									{
										"kind": "text",
										"text": ",\nand passing the returned "
									},
									{
										"kind": "code",
										"text": "`SpriteTransaction`"
									},
									{
										"kind": "text",
										"text": " to a callback as an argument,\nto be passed to non-idempotent databases operations."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "void"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function transactionExample() {\n  try {\n    const transaction = await client.transaction(async (trx) => {\n      client.createType('aType', trx);\n    });\n    console.log(transaction.id);\n    // 'AS-0000000-0000-0000-0000-00000000000'\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\ntransactionExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 74,
									"character": 16,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L74"
								}
							],
							"parameters": [
								{
									"id": 240,
									"name": "callback",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 317,
										"name": "SpriteTransactionCallback",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 241,
									"name": "isolationLevel",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/transaction.ts",
											"qualifiedName": "ArcadeTransactionIsolationLevel"
										},
										"name": "ArcadeTransactionIsolationLevel",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.transaction"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.transaction"
					}
				},
				{
					"id": 253,
					"name": "updateOne",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "modes/ModalityBase.ts",
							"line": 218,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L218"
						}
					],
					"signatures": [
						{
							"id": 254,
							"name": "updateOne",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Update one record in the database, by providing an RID."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aSpriteDatabase'\n});\n\ntype DocTypes = {\n  aType: {\n    aField: string\n  }\n}\n\nconst client = database.documentModality<DocTypes>();\n\nasync function updateOneExample() {\n  try {\n    await client.transaction(async (trx) => {\n      const result = await client.updateOne('#0:0', { aField: 'aValue' }, trx);\n      console.log(result);\n      // {\n      //   '@rid': '#0:0',\n      //   '@type': 'aType',\n      //   '@cat': 'd',\n      //   aField: 'aValue'\n      // }\n    });\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\nupdateOneExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "modes/ModalityBase.ts",
									"line": 218,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/ModalityBase.ts#L218"
								}
							],
							"typeParameter": [
								{
									"id": 255,
									"name": "N",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"parameters": [
								{
									"id": 256,
									"name": "rid",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The RID of the record to update."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 257,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data to replace within the record."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 308,
										"typeArguments": [
											{
												"type": "indexedAccess",
												"indexType": {
													"type": "reference",
													"target": 177,
													"name": "N",
													"package": "@valence-corp/sprite",
													"refersToTypeParameter": true
												},
												"objectType": {
													"type": "intersection",
													"types": [
														{
															"type": "reference",
															"target": 189,
															"name": "V",
															"package": "@valence-corp/sprite",
															"qualifiedName": "GraphModality.V",
															"refersToTypeParameter": true
														},
														{
															"type": "reference",
															"target": 190,
															"name": "E",
															"package": "@valence-corp/sprite",
															"qualifiedName": "GraphModality.E",
															"refersToTypeParameter": true
														}
													]
												}
											}
										],
										"name": "OmitMeta",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 258,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to conduct the update operation within"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 521,
										"name": "RecordOperationResponse",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "ModalityBase.updateOne"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "ModalityBase.updateOne"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						187
					]
				},
				{
					"title": "Properties",
					"children": [
						221,
						222
					]
				},
				{
					"title": "Methods",
					"children": [
						209,
						215,
						242,
						249,
						229,
						199,
						235,
						193,
						223,
						259,
						238,
						253
					]
				}
			],
			"sources": [
				{
					"fileName": "modes/GraphModality.ts",
					"line": 22,
					"character": 6,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/modes/GraphModality.ts#L22"
				}
			],
			"typeParameters": [
				{
					"id": 263,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 264,
					"name": "E",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "src/modes/ModalityBase.ts",
						"qualifiedName": "ModalityBase"
					},
					"typeArguments": [
						{
							"type": "intersection",
							"types": [
								{
									"type": "reference",
									"target": 189,
									"name": "V",
									"package": "@valence-corp/sprite",
									"qualifiedName": "GraphModality.V",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 190,
									"name": "E",
									"package": "@valence-corp/sprite",
									"qualifiedName": "GraphModality.E",
									"refersToTypeParameter": true
								}
							]
						}
					],
					"name": "ModalityBase",
					"package": "@valence-corp/sprite"
				}
			]
		},
		{
			"id": 1,
			"name": "SpriteDatabase",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interact with a database, perform queries, issue commands to manage\nrecords, types, and settings."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "parameters",
						"content": [
							{
								"kind": "text",
								"text": "The fields necessary to perform operations on a specific database."
							}
						]
					},
					{
						"tag": "@returns",
						"content": [
							{
								"kind": "text",
								"text": "an instance of SpriteDatabase"
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\ntype DocumentTypes = {\n  aDocument: {\n    aField: string\n  }\n}\n\nasync function databaseExample() {\n const client = database.documents<DocumentTypes>();\n  try {\n    await client.transaction(async (trx) => {\n      await client.createType('aDocument', trx);\n      client.createDocument('aDocument', trx, {\n        data: {\n          aField: 'aValue'\n        }\n      })\n    });\n    const schema = await database.getSchema();\n    console.log(schema);\n    // [...]\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\ndatabaseExample();\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 2,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 76,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L76"
						},
						{
							"fileName": "SpriteDatabase.ts",
							"line": 77,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L77"
						},
						{
							"fileName": "SpriteDatabase.ts",
							"line": 78,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L78"
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "new SpriteDatabase",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 76,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L76"
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "parameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 297,
										"name": "ISpriteDatabaseClientParameters",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "SpriteDatabase",
								"package": "@valence-corp/sprite"
							}
						},
						{
							"id": 5,
							"name": "new SpriteDatabase",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 77,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L77"
								}
							],
							"parameters": [
								{
									"id": 6,
									"name": "parameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 292,
										"name": "ISpriteDatabaseConnectionParameters",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "SpriteDatabase",
								"package": "@valence-corp/sprite"
							}
						}
					]
				},
				{
					"id": 7,
					"name": "_client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rest client, handles auth and connection details"
							}
						]
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 67,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L67"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/SpriteRestClient.ts",
							"qualifiedName": "SpriteRestClient"
						},
						"name": "SpriteRestClient",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 10,
					"name": "_documentModality",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Modality for operations involving document records"
							}
						]
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 73,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L73"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 125,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "DocumentModality",
								"package": "@valence-corp/sprite"
							}
						]
					}
				},
				{
					"id": 11,
					"name": "_graphModality",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Modality for operations involving vertex & edge records"
							}
						]
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 75,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L75"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": 186,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "unknown"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "GraphModality",
								"package": "@valence-corp/sprite"
							}
						]
					}
				},
				{
					"id": 9,
					"name": "_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the database"
							}
						]
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 71,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L71"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 8,
					"name": "_sql",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Methods for performing SQL operations on the database."
							}
						]
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 69,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L69"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "src/SqlDialect.ts",
									"qualifiedName": "SqlDialect"
								},
								"name": "SqlDialect",
								"package": "@valence-corp/sprite"
							}
						]
					}
				},
				{
					"id": 12,
					"name": "name",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 96,
							"character": 6,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L96"
						}
					],
					"getSignature": {
						"id": 13,
						"name": "name",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The name of the database."
								}
							]
						},
						"sources": [
							{
								"fileName": "SpriteDatabase.ts",
								"line": 96,
								"character": 6,
								"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L96"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 14,
					"name": "sql",
					"variant": "declaration",
					"kind": 262144,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 104,
							"character": 14,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L104"
						}
					],
					"getSignature": {
						"id": 15,
						"name": "sql",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Private getter for this._sql, to avoid\nprematurly creating the sql dialect if they are not\nneeded."
								}
							]
						},
						"sources": [
							{
								"fileName": "SpriteDatabase.ts",
								"line": 104,
								"character": 14,
								"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L104"
							}
						],
						"type": {
							"type": "reference",
							"target": {
								"sourceFileName": "src/SqlDialect.ts",
								"qualifiedName": "SqlDialect"
							},
							"name": "SqlDialect",
							"package": "@valence-corp/sprite"
						}
					}
				},
				{
					"id": 16,
					"name": "_endpoint",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 111,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L111"
						}
					],
					"signatures": [
						{
							"id": 17,
							"name": "_endpoint",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Helper function for building enpoints"
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 111,
									"character": 22,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L111"
								}
							],
							"parameters": [
								{
									"id": 18,
									"name": "endpoint",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 35,
					"name": "command",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 331,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L331"
						}
					],
					"signatures": [
						{
							"id": 36,
							"name": "command",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Executes a command on the target database. This method only executes\nnon-idempotent statements (that can change the database), such as "
									},
									{
										"kind": "code",
										"text": "`INSERT`"
									},
									{
										"kind": "text",
										"text": ",\n"
									},
									{
										"kind": "code",
										"text": "`CREATE`"
									},
									{
										"kind": "text",
										"text": ", and "
									},
									{
										"kind": "code",
										"text": "`DELETE`"
									},
									{
										"kind": "text",
										"text": ". The execution of idempotent commands will throw an\n"
									},
									{
										"kind": "code",
										"text": "`IllegalArgumentException`"
									},
									{
										"kind": "text",
										"text": " exception. If you are trying to execute\nidempotent commands, see the "
									},
									{
										"kind": "code",
										"text": "`SpriteDatabase.query()`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@throw",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " when it cannot execute the command."
											}
										]
									},
									{
										"tag": "@see",
										"content": [
											{
												"kind": "text",
												"text": "SpriteDatabase.transaction()"
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\nasync function spriteCommandExample() {\n  try {\n    // commands are non-idempotent, and must be\n    // conducted as part of a transaction\n    const transaction = await database.newTransaction();\n    const result = await database.command(\n      'sql',\n      'CREATE document TYPE aType',\n      transaction\n    );\n    transaction.commit();\n    console.log(result);\n    // {\n    //  user: 'aUser',\n    //  version: '24.x.x (build [...])',\n    //  serverName: 'ArcadeDB_0',\n    //  result: [ { operation: 'create document type', typeName: 'aType' } ]\n    // }\n    return result;\n  } catch (error) {\n    // handle error conditions\n    console.error(error);\n  }\n};\n\nspriteCommandExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 331,
									"character": 12,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L331"
								}
							],
							"typeParameter": [
								{
									"id": 37,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 38,
									"name": "language",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The language the command is written in."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 300,
										"name": "ArcadeSupportedQueryLanguages",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 39,
									"name": "command",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The command to execute in the given language."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 40,
									"name": "transaction",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The transaction to perform this command within."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 41,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 42,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"children": [
												{
													"id": 43,
													"name": "params",
													"variant": "declaration",
													"kind": 1024,
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "SpriteDatabase.ts",
															"line": 336,
															"character": 6,
															"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L336"
														}
													],
													"type": {
														"type": "reference",
														"target": {
															"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
															"qualifiedName": "Record"
														},
														"typeArguments": [
															{
																"type": "intrinsic",
																"name": "string"
															},
															{
																"type": "intrinsic",
																"name": "any"
															}
														],
														"name": "Record",
														"package": "typescript"
													}
												}
											],
											"groups": [
												{
													"title": "Properties",
													"children": [
														43
													]
												}
											],
											"sources": [
												{
													"fileName": "SpriteDatabase.ts",
													"line": 335,
													"character": 14,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L335"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 348,
										"typeArguments": [
											{
												"type": "reference",
												"target": 37,
												"name": "T",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ArcadeCommandResponse",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 49,
					"name": "commitTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 504,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L504"
						}
					],
					"signatures": [
						{
							"id": 50,
							"name": "commitTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Commits a transaction on the server, provided a transaction id.\nProvide the id obtained from the transaction returned from invoking\n"
									},
									{
										"kind": "code",
										"text": "`SpriteDatabase.newTransaction()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@note",
										"content": [
											{
												"kind": "text",
												"text": "You can use the "
											},
											{
												"kind": "code",
												"text": "`SpriteTransaction.commit()`"
											},
											{
												"kind": "text",
												"text": " method directly."
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "Promise that resolves to boolean "
											},
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if successful, and "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " otherwise."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "Error if it cannot commit the transaction."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nasync function commitTransactionExample() {\n  try {\n    const trx = await database.newTransaction();\n    await database.command(\n      'sql',\n      'CREATE document TYPE aType',\n      trx\n    );\n    console.log(trx.id);\n    // 'AS-0000000-0000-0000-0000-00000000000'\n    database.commitTransaction(trx.id);\n    return trx;\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\ncommitTransactionExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 504,
									"character": 22,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L504"
								}
							],
							"parameters": [
								{
									"id": 51,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the transaction to commit."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 19,
					"name": "documentModality",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 116,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L116"
						}
					],
					"signatures": [
						{
							"id": 20,
							"name": "documentModality",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a modality for working with document records within the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A database document modality."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 116,
									"character": 21,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L116"
								}
							],
							"typeParameter": [
								{
									"id": 21,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"target": 125,
								"typeArguments": [
									{
										"type": "reference",
										"target": 288,
										"typeArguments": [
											{
												"type": "reference",
												"target": 21,
												"name": "T",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "AsArcadeRecords",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "DocumentModality",
								"package": "@valence-corp/sprite"
							}
						}
					]
				},
				{
					"id": 32,
					"name": "explain",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 265,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L265"
						}
					],
					"signatures": [
						{
							"id": 33,
							"name": "explain",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns information about query execution planning of a specific statement,\nwithout executing the statement itself."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The explanation of the command."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\nasync function spriteExplainExample() {\n  try {\n    const explanation = await client.explain(\"SELECT FROM schema:types\");\n    console.log(explanation);\n    // {\n    //   executionPlan: {\n    //     type: 'QueryExecutionPlan',\n    //     javaType: 'com.arcadedb.query.sql.executor.SelectExecutionPlan',\n    //     cost: -1,\n    //     prettyPrint: '+ FETCH DATABASE METADATA TYPES',\n    //     steps: [ [Object] ]\n    //   },\n    //   executionPlanAsString: '+ FETCH DATABASE METADATA TYPES'\n    // }\n    return explanation;\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\nspriteExplainExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 265,
									"character": 12,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L265"
								}
							],
							"parameters": [
								{
									"id": 34,
									"name": "sql",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The SQL command to explain."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 344,
										"name": "ArcadeSqlExplanation",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 44,
					"name": "getSchema",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 391,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L391"
						}
					],
					"signatures": [
						{
							"id": 45,
							"name": "getSchema",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Return the current schema."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array of objects describing the schema."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nasync function getSchemaExample() {\n  try {\n    const schema = await database.getSchema();\n    console.log(schema);\n    // [...]\n    return schema;\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\ngetSchemaExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 391,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L391"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 336,
											"name": "ArcadeGetSchemaResponse",
											"package": "@valence-corp/sprite"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 22,
					"name": "graphModality",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 129,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L129"
						}
					],
					"signatures": [
						{
							"id": 23,
							"name": "graphModality",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a modality for working with graph records within the database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A database graph modality."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 129,
									"character": 18,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L129"
								}
							],
							"typeParameter": [
								{
									"id": 24,
									"name": "V",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								},
								{
									"id": 25,
									"name": "E",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"type": {
								"type": "reference",
								"target": 186,
								"typeArguments": [
									{
										"type": "reference",
										"target": 288,
										"typeArguments": [
											{
												"type": "reference",
												"target": 24,
												"name": "V",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "AsArcadeRecords",
										"package": "@valence-corp/sprite"
									},
									{
										"type": "reference",
										"target": 286,
										"typeArguments": [
											{
												"type": "reference",
												"target": 25,
												"name": "E",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "AsArcadeEdges",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "GraphModality",
								"package": "@valence-corp/sprite"
							}
						}
					]
				},
				{
					"id": 46,
					"name": "newTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 436,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L436"
						}
					],
					"signatures": [
						{
							"id": 47,
							"name": "newTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Begins a transaction on the server, managed as a session."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An instance of a SpriteTransaction to be passed to methods that require it an argument."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nasync function transactionExample() {\n  try {\n    const trx = await database.newTransaction();\n    await database.command(\n      'sql',\n      'CREATE document TYPE aType',\n      trx\n    );\n    trx.commit();\n    console.log(trx.id);\n    // 'AS-0000000-0000-0000-0000-00000000000'\n    return trx;\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\ntransactionExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 436,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L436"
								}
							],
							"parameters": [
								{
									"id": 48,
									"name": "isolationLevel",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The isolation level for the transaction, defaults to "
											},
											{
												"kind": "code",
												"text": "`READ_COMMITED`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/types/transaction.ts",
											"qualifiedName": "ArcadeTransactionIsolationLevel"
										},
										"name": "ArcadeTransactionIsolationLevel",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 109,
										"name": "SpriteTransaction",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 26,
					"name": "query",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 191,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L191"
						}
					],
					"signatures": [
						{
							"id": 27,
							"name": "query",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Executes a query against the target database. This method only executes\nidempotent statements (that cannot change the database), namely "
									},
									{
										"kind": "code",
										"text": "`SELECT`"
									},
									{
										"kind": "text",
										"text": "\nand "
									},
									{
										"kind": "code",
										"text": "`MATCH`"
									},
									{
										"kind": "text",
										"text": ". The execution of non-idempotent commands will throw an\n"
									},
									{
										"kind": "code",
										"text": "`IllegalArgumentException`"
									},
									{
										"kind": "text",
										"text": " exception. If you are trying to execute\nnon-idempotent commands, see the "
									},
									{
										"kind": "code",
										"text": "`SpriteDatabase.command()`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\nasync function spriteQueryExample() {\n  try {\n    const result = await database.query(\n      'sql',\n      'SELECT FROM schema:types'\n    );\n    console.log(result);\n    // { \n    //   user: 'aUser',\n    //   version: '24.x.x',\n    //   serverName: 'ArcadeDB_0',\n    //   result: [...]\n    // }\n  return result\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n};\n\nspriteQueryExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 191,
									"character": 10,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L191"
								}
							],
							"typeParameter": [
								{
									"id": 28,
									"name": "ReturnType",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "language",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The language of the query."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 300,
										"name": "ArcadeSupportedQueryLanguages",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 30,
									"name": "command",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The command to execute in the given language."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 31,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The key-value pairs of parameters to use in the query."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Record"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "any"
											}
										],
										"name": "Record",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 354,
										"typeArguments": [
											{
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": 28,
													"name": "ReturnType",
													"package": "@valence-corp/sprite",
													"refersToTypeParameter": true
												}
											}
										],
										"name": "ArcadeQueryResponse",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 52,
					"name": "rollbackTransaction",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteDatabase.ts",
							"line": 559,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L559"
						}
					],
					"signatures": [
						{
							"id": 53,
							"name": "rollbackTransaction",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Rolls back a transaction on the server. Provide the session id obtained with the "
									},
									{
										"kind": "code",
										"text": "`SpriteDatabase.newTransaction()`"
									},
									{
										"kind": "text",
										"text": " method."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response from the server."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nasync function rollbackTransactionExample() {\n  try {\n    const trx = await database.newTransaction();\n    await database.command(\n      'sql',\n      'CREATE document TYPE aType',\n      trx\n    );\n    await trx.commit();\n    console.log(trx.id);\n    // 'AS-0000000-0000-0000-0000-00000000000'\n    database.rollbackTransaction(trx.id);\n    return trx;\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\nrollbackTransactionExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteDatabase.ts",
									"line": 559,
									"character": 24,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L559"
								}
							],
							"parameters": [
								{
									"id": 54,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The ID of the transaction to commit."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						2
					]
				},
				{
					"title": "Properties",
					"children": [
						7,
						10,
						11,
						9,
						8
					]
				},
				{
					"title": "Accessors",
					"children": [
						12,
						14
					]
				},
				{
					"title": "Methods",
					"children": [
						16,
						35,
						49,
						19,
						32,
						44,
						22,
						46,
						26,
						52
					]
				}
			],
			"sources": [
				{
					"fileName": "SpriteDatabase.ts",
					"line": 65,
					"character": 6,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteDatabase.ts#L65"
				}
			]
		},
		{
			"id": 55,
			"name": "SpriteServer",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Methods for interact with an ArcadeDB server. Manage databases, users, etc."
					}
				],
				"blockTags": [
					{
						"tag": "@param",
						"name": "parameters",
						"content": [
							{
								"kind": "text",
								"text": "Connection details to access the server with."
							}
						]
					},
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\nconst client = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function serverReadyExample() {\n  try {\n    const ready = await client.serverReady();\n    if (ready) {\n      console.log(ready);\n      // true;\n    }\n  } catch (error) {\n    throw new Error(\n      'An error occurred while running example.',\n      { cause: error }\n    );\n  }\n}\n\nserverReadyExample();\n```"
							}
						]
					}
				]
			},
			"children": [
				{
					"id": 56,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 44,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "new SpriteServer",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 44,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L44"
								}
							],
							"parameters": [
								{
									"id": 58,
									"name": "parameters",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 265,
										"name": "ISpriteRestClientConnectionParameters",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 55,
								"name": "SpriteServer",
								"package": "@valence-corp/sprite"
							}
						}
					]
				},
				{
					"id": 59,
					"name": "_client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 42,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/SpriteRestClient.ts",
							"qualifiedName": "SpriteRestClient"
						},
						"name": "SpriteRestClient",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 60,
					"name": "_validate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 43,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/validation/ArcadeParameterValidation.ts",
							"qualifiedName": "ArcadeParameterValidation"
						},
						"name": "ArcadeParameterValidation",
						"package": "@valence-corp/sprite"
					},
					"defaultValue": "validation"
				},
				{
					"id": 76,
					"name": "_booleanCommand",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 251,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L251"
						}
					],
					"signatures": [
						{
							"id": 77,
							"name": "_booleanCommand",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Internal method for sending commands to the server in which a JSON response\ncontaining an "
									},
									{
										"kind": "code",
										"text": "`ok`"
									},
									{
										"kind": "text",
										"text": " value in the "
									},
									{
										"kind": "code",
										"text": "`result`"
									},
									{
										"kind": "text",
										"text": " property is expected. "
									},
									{
										"kind": "code",
										"text": "`ok`"
									},
									{
										"kind": "text",
										"text": " is then\nreturned as a simple boolean ("
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": ") value"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the command was successful."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nasync function booleanCommandExample(databaseName: string) {\n  try {\n    const response = await server.booleanCommand(`CREATE DATABASE ${databaseName}`);\n    console.log(response);\n    // true\n  } catch (error) {\n    // Will throw an error for conditions such as:\n    // Invalid credentials, Database Already Exists, etc.\n    console.error(error);\n  }\n}\nbooleanCommandExample(\"myDatabase\");\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 251,
									"character": 28,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L251"
								}
							],
							"parameters": [
								{
									"id": 78,
									"name": "command",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [command](https://docs.arcadedb.com/#HTTP-ServerCommand) to send to the server, such as "
											},
											{
												"kind": "code",
												"text": "`CREATE DATABASE`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 63,
					"name": "closeDatabase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 109,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L109"
						}
					],
					"signatures": [
						{
							"id": 64,
							"name": "closeDatabase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Close a database"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response from the server."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function closeDatabaseExample(databaseName: string) {\n  try {\n    const closed = await server.closeDatabase(databaseName);\n    console.log(closed);\n    // true\n  } catch (error) {\n    console.error(error);\n    // manage error conditions\n  }\n};\n\ncloseDatabaseExample('aDatabase');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 109,
									"character": 18,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L109"
								}
							],
							"parameters": [
								{
									"id": 65,
									"name": "databaseName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the database to close."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 72,
					"name": "command",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 214,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L214"
						}
					],
					"signatures": [
						{
							"id": 73,
							"name": "command",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A method for sending commands (as strings) to the server."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response is simplified from the raw response from the ArcadeDB server. JSON responses automatically return just the "
											},
											{
												"kind": "code",
												"text": "`result`"
											},
											{
												"kind": "text",
												"text": " property of the raw JSON object returned from the server. Results such as "
											},
											{
												"kind": "code",
												"text": "`OK`"
											},
											{
												"kind": "text",
												"text": " are returned as "
											},
											{
												"kind": "code",
												"text": "`boolean`"
											},
											{
												"kind": "text",
												"text": " values."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function commandExample(databaseName: string) {\n  try {\n    const response = await server.command(`CREATE DATABASE ${databaseName}`);\n    console.log(response);\n    // {\n    //   user: 'aUser',\n    //   version: '24.x.x',\n    //   serverName: 'ArcadeDB_0',\n    //   result: 'ok'\n    // }\n  } catch (error) {\n    // Will throw an error for conditions such as:\n    // Invalid credentials, Database Already Exists, etc.\n    console.error(error);\n  }\n}\n\ncommandExample('aDatabase');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 214,
									"character": 12,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L214"
								}
							],
							"typeParameter": [
								{
									"id": 74,
									"name": "T",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {}
								}
							],
							"parameters": [
								{
									"id": 75,
									"name": "command",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The [command](https://docs.arcadedb.com/#HTTP-ServerCommand) to send to the server, such as "
											},
											{
												"kind": "code",
												"text": "`CREATE DATABASE aDatabase`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 74,
										"name": "T",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 79,
					"name": "connectCluster",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 285,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L285"
						}
					],
					"signatures": [
						{
							"id": 80,
							"name": "connectCluster",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Connects this server to a cluster with "
									},
									{
										"kind": "code",
										"text": "`address`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response from the server."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the cluster could not be connected."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function connectClusterExample(address: string) {\n  try {\n    const connected = await server.connectCluster(address);\n    console.log(connected);\n    // true\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\nconnectClusterExample('192.168.0.1');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 285,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L285"
								}
							],
							"parameters": [
								{
									"id": 81,
									"name": "address",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The address of the cluster to connect (i.e. 192.168.0.1)"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 82,
					"name": "createDatabase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 321,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L321"
						}
					],
					"signatures": [
						{
							"id": 83,
							"name": "createDatabase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a database"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An instance of "
											},
											{
												"kind": "code",
												"text": "`SpriteDatabase`"
											},
											{
												"kind": "text",
												"text": ", targeting the created database."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function createDatabaseExample(databaseName: string) {\n  try {\n    const database = await server.createDatabase(databaseName);\n    console.log(database.name);\n    // 'aDatabase'\n  } catch (error) {\n    console.log(error);\n    // handle error conditions\n  }\n}\n\ncreateDatabaseExample('aDatabase');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 321,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L321"
								}
							],
							"parameters": [
								{
									"id": 84,
									"name": "databaseName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the database to create."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 1,
										"name": "SpriteDatabase",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 85,
					"name": "createUser",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 379,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L379"
						}
					],
					"signatures": [
						{
							"id": 86,
							"name": "createUser",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create a user. "
									},
									{
										"kind": "code",
										"text": "`username`"
									},
									{
										"kind": "text",
										"text": ", "
									},
									{
										"kind": "code",
										"text": "`password`"
									},
									{
										"kind": "text",
										"text": ", and access controls to multiple databases\ncan be established using the "
									},
									{
										"kind": "code",
										"text": "`databases`"
									},
									{
										"kind": "text",
										"text": " property of the input parameters.\nThe "
									},
									{
										"kind": "code",
										"text": "`databases`"
									},
									{
										"kind": "text",
										"text": " object uses 'groups' to grant access controls. Assigning\na user to groups within a specific database grants them the permissions associated\nwith those groups for a particular database."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the user was created successfully."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the user could not be created."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function createUserExample(details: ISpriteCreateArcadeUser) {\n  try {\n    const created = await server.createUser(details);\n    console.log(created);\n    // true\n  } catch (error) {\n    console.error(error);\n    // handle error conditions\n  }\n}\n\ncreateUserExample({\n  username: 'myUsername',\n  password: 'myPassword',\n  databases: {\n    \"FirstDatabase\": \"admin\"\n    \"SecondDatabase\": \"user\"\n  }\n});\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 379,
									"character": 15,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L379"
								}
							],
							"parameters": [
								{
									"id": 87,
									"name": "params",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 411,
										"name": "ISpriteCreateArcadeUser",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 69,
					"name": "database",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 170,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L170"
						}
					],
					"signatures": [
						{
							"id": 70,
							"name": "database",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an SpriteDatabase client for the supplied "
									},
									{
										"kind": "code",
										"text": "`databaseName`"
									},
									{
										"kind": "text",
										"text": ",\nusing the authorization details of the "
									},
									{
										"kind": "code",
										"text": "`SpriteServer`"
									},
									{
										"kind": "text",
										"text": " client."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An instance of SpriteDatabase."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nconst database = await server.database('aDatabase');\n// returns an instance of SpriteDatabase\nconsole.log(database.name);\n// 'aDatabase';\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 170,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L170"
								}
							],
							"parameters": [
								{
									"id": 71,
									"name": "databaseName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the database to create a client for."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "SpriteDatabase",
								"package": "@valence-corp/sprite"
							}
						}
					]
				},
				{
					"id": 88,
					"name": "databaseExists",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 456,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L456"
						}
					],
					"signatures": [
						{
							"id": 89,
							"name": "databaseExists",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Check to see if a database exists."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if database exists, "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": " if not"
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the existence of the database could not be verified."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function databaseExistsExample(databaseName: string) {\n  try {\n    await server.createDatabase(databaseName);\n    const exists = await server.databaseExists(databaseName);\n    console.log(exists);\n    // true\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\ndatabaseExistsExample('aDatabase');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 456,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L456"
								}
							],
							"parameters": [
								{
									"id": 90,
									"name": "databaseName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the database to check for existence."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 91,
					"name": "disconnectCluster",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 503,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L503"
						}
					],
					"signatures": [
						{
							"id": 92,
							"name": "disconnectCluster",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Disconnects the server from the cluster."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response from the server."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the cluster could not be disconnected."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function disconnectClusterExample() {\n  try {\n    const disconnected = await server.disconnectCluster();\n    console.log(disconnected);\n    // true\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\ndisconnectClusterExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 503,
									"character": 22,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L503"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 93,
					"name": "dropDatabase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 539,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L539"
						}
					],
					"signatures": [
						{
							"id": 94,
							"name": "dropDatabase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Drop a database"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if successfully dropped."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the database could not be dropped."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function dropDatabaseExample(databaseName: string) {\n  try {\n    const dropped = await server.dropDatabase(databaseName);\n    console.log(dropped);\n    // true\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\ndropDatabaseExample('aDatabase');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 539,
									"character": 17,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L539"
								}
							],
							"parameters": [
								{
									"id": 95,
									"name": "databaseName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the database to drop."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 96,
					"name": "dropUser",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 574,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L574"
						}
					],
					"signatures": [
						{
							"id": 97,
							"name": "dropUser",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Drop a user from the ArcadeDB server."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the user was successfully dropped."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the user could not be dropped."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function dropUserExample(username: string) {\n  try {\n    const dropped = await server.dropUser(username);\n    console.log(dropped);\n    // true\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\ndropUserExample('aUser');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 574,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L574"
								}
							],
							"parameters": [
								{
									"id": 98,
									"name": "username",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`username`"
											},
											{
												"kind": "text",
												"text": " of the user to drop from the ArcadeDB server."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 99,
					"name": "getEvents",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 623,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L623"
						}
					],
					"signatures": [
						{
							"id": 100,
							"name": "getEvents",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Retrieves a list of server events, optionally a filename of the form\n"
									},
									{
										"kind": "code",
										"text": "`server-event-log-yyyymmdd-HHMMSS.INDEX.jsonl`"
									},
									{
										"kind": "text",
										"text": " (where INDEX is a integer, i.e. 0)\ncan be given to retrieve older event logs."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An object containing he server events from the server, and filenames of the associated logs."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if there was a problem fetching the event logs."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function getServerEventsExample() {\n  try {\n    const events = await server.getServerEvents();\n    console.log(events);\n    // {\n    //    events: [\n    //      {\n    //        \"time\":\"2024-01-30 06:37:20.325\",\n    //        \"type\":\"INFO\",\"component\":\"Server\",\n    //        \"message\":\"ArcadeDB Server started in \\\\u0027development\\\\u0027 mode (CPUs\\\\u003d8 MAXRAM\\\\u003d3.84GB)\"}]\n    //      }\n    //    ],\n    //    files: [\n    //      \"server-event-log-20240205-060106.13.jsonl\",\n    //      \"server-event-log-20240204-185020.12.jsonl\",\n    //      \"server-event-log-20240204-063235.11.jsonl\",\n    //      \"server-event-log-20240131-205254.10.jsonl\",\n    //      \"server-event-log-20240130-133802.9.jsonl\"\n    //    ]\n    // }\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\ngetServerEventsExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 623,
									"character": 14,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L623"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 423,
										"name": "SpriteArcadeServerEvents",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 101,
					"name": "getInformation",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 666,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L666"
						}
					],
					"signatures": [
						{
							"id": 102,
							"name": "getInformation",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current configuration."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response from the server."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the information could not be retrieved."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function getInformationExample(mode: ArcadeServerInformationLevel) {\n  try {\n    const information = await sprite.getInformation(mode);\n    console.log(information);\n    // {\n    //   user: 'aUser',\n    //   version: '24.x.x',\n    //   serverName: 'ArcadeDB_0'\n    // }\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\ngetInformationExample('basic');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 666,
									"character": 19,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L666"
								}
							],
							"typeParameter": [
								{
									"id": 103,
									"name": "M",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 427,
										"name": "ArcadeServerInformationLevel",
										"package": "@valence-corp/sprite"
									},
									"default": {
										"type": "literal",
										"value": "default"
									}
								}
							],
							"parameters": [
								{
									"id": 104,
									"name": "mode",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The level of informatio detail to return.\n* "
											},
											{
												"kind": "code",
												"text": "`basic`"
											},
											{
												"kind": "text",
												"text": " returns minimal server information\n* "
											},
											{
												"kind": "code",
												"text": "`default`"
											},
											{
												"kind": "text",
												"text": " returns full server configuration (default value when no parameter is given)\n* "
											},
											{
												"kind": "code",
												"text": "`cluster`"
											},
											{
												"kind": "text",
												"text": " returns the cluster layout"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 103,
										"name": "M",
										"package": "@valence-corp/sprite",
										"refersToTypeParameter": true
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "reference",
										"target": 511,
										"typeArguments": [
											{
												"type": "reference",
												"target": 103,
												"name": "M",
												"package": "@valence-corp/sprite",
												"refersToTypeParameter": true
											}
										],
										"name": "ArcadeServerInformation",
										"package": "@valence-corp/sprite"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 105,
					"name": "listDatabases",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 704,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L704"
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "listDatabases",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a list of database names that are present on the server."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "A list (array) of database names present on the server."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if the database list could not be retrieved."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function listDatabasesExample() {\n  try {\n    const list = await sprite.listDatabases();\n    console.log(list);\n    // [ 'databaseName' ]\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\nlistDatabasesExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 704,
									"character": 18,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L704"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 66,
					"name": "openDatabase",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 143,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L143"
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "openDatabase",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Open a database"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The response from the server."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function openDatabaseExample(databaseName: string) {\n  try {\n    const open = await server.openDatabase(databaseName);\n    console.log(open);\n    // true\n  } catch (error) {\n    console.error(error);\n    // handle errors\n  }\n};\n\nopenDatabaseExample('aDatabase');\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 143,
									"character": 17,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L143"
								}
							],
							"parameters": [
								{
									"id": 68,
									"name": "databaseName",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the database to open."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 61,
					"name": "serverReady",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 76,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L76"
						}
					],
					"signatures": [
						{
							"id": 62,
							"name": "serverReady",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a "
									},
									{
										"kind": "code",
										"text": "`boolean`"
									},
									{
										"kind": "text",
										"text": " value indicating if the ArcadeDB server is ready.\\\nUseful for remote monitoring of server readiness."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the server is ready, otherwise "
											},
											{
												"kind": "code",
												"text": "`false`"
											},
											{
												"kind": "text",
												"text": "."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst client = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function serverReadyExample() {\n  try {\n    const ready = await client.serverReady();\n    if (ready) {\n      console.log(ready);\n      // true;\n    }\n  } catch (error) {\n    throw new Error(\n      'An error occurred while running example.',\n      { cause: error }\n    );\n  }\n}\n\nserverReadyExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 76,
									"character": 16,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L76"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 107,
					"name": "shutdown",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteServer.ts",
							"line": 741,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L741"
						}
					],
					"signatures": [
						{
							"id": 108,
							"name": "shutdown",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gracefully shutdown the server.\\\n"
									},
									{
										"kind": "code",
										"text": "`TODO:`"
									},
									{
										"kind": "text",
										"text": " This works, in that it does shutdown the server, but the fetch throws\nbefore it resolves, guessing because the server is shutting down. A CURL, however,\nreturns an empty "
									},
									{
										"kind": "code",
										"text": "`204`"
									},
									{
										"kind": "text",
										"text": " response as the documentation indicates."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "code",
												"text": "`true`"
											},
											{
												"kind": "text",
												"text": " if the server is successfully shutdown."
											}
										]
									},
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "code",
												"text": "`Error`"
											},
											{
												"kind": "text",
												"text": " if there is a problem attempting the shutdown."
											}
										]
									},
									{
										"tag": "@example",
										"content": [
											{
												"kind": "code",
												"text": "```ts\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n});\n\nasync function shutdownExample() {\n  try {\n    const shutdown = await server.shutdown();\n    console.log(shutdown);\n  } catch (error) {\n    console.error(error);\n    // handle error condition\n  }\n}\n\nshutdownExample();\n```"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "SpriteServer.ts",
									"line": 741,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L741"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						56
					]
				},
				{
					"title": "Properties",
					"children": [
						59,
						60
					]
				},
				{
					"title": "Methods",
					"children": [
						76,
						63,
						72,
						79,
						82,
						85,
						69,
						88,
						91,
						93,
						96,
						99,
						101,
						105,
						66,
						61,
						107
					]
				}
			],
			"sources": [
				{
					"fileName": "SpriteServer.ts",
					"line": 41,
					"character": 6,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteServer.ts#L41"
				}
			]
		},
		{
			"id": 109,
			"name": "SpriteTransaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"children": [
				{
					"id": 110,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L7"
						}
					],
					"signatures": [
						{
							"id": 111,
							"name": "new SpriteTransaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"sources": [
								{
									"fileName": "SpriteTransaction.ts",
									"line": 7,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L7"
								}
							],
							"parameters": [
								{
									"id": 112,
									"name": "database",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "SpriteDatabase",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 113,
									"name": "transactionId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 109,
								"name": "SpriteTransaction",
								"package": "@valence-corp/sprite"
							}
						}
					]
				},
				{
					"id": 115,
					"name": "_committed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 5,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L5"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false"
				},
				{
					"id": 114,
					"name": "_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 4,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L4"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 116,
					"name": "database",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 6,
							"character": 10,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L6"
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "SpriteDatabase",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 119,
					"name": "committed",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 21,
							"character": 6,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L21"
						}
					],
					"getSignature": {
						"id": 120,
						"name": "committed",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "Whether or not the transaction has been committed"
								}
							]
						},
						"sources": [
							{
								"fileName": "SpriteTransaction.ts",
								"line": 21,
								"character": 6,
								"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L21"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						}
					}
				},
				{
					"id": 117,
					"name": "id",
					"variant": "declaration",
					"kind": 262144,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 17,
							"character": 6,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L17"
						}
					],
					"getSignature": {
						"id": 118,
						"name": "id",
						"variant": "signature",
						"kind": 524288,
						"flags": {},
						"comment": {
							"summary": [
								{
									"kind": "text",
									"text": "The trasaction ID"
								}
							]
						},
						"sources": [
							{
								"fileName": "SpriteTransaction.ts",
								"line": 17,
								"character": 6,
								"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L17"
							}
						],
						"type": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 121,
					"name": "commit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 24,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 122,
							"name": "commit",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "SpriteTransaction.ts",
									"line": 24,
									"character": 11,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L24"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "boolean"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 123,
					"name": "rollback",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "SpriteTransaction.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L34"
						}
					],
					"signatures": [
						{
							"id": 124,
							"name": "rollback",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"sources": [
								{
									"fileName": "SpriteTransaction.ts",
									"line": 34,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L34"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						110
					]
				},
				{
					"title": "Properties",
					"children": [
						115,
						114,
						116
					]
				},
				{
					"title": "Accessors",
					"children": [
						119,
						117
					]
				},
				{
					"title": "Methods",
					"children": [
						121,
						123
					]
				}
			],
			"sources": [
				{
					"fileName": "SpriteTransaction.ts",
					"line": 3,
					"character": 13,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/SpriteTransaction.ts#L3"
				}
			]
		},
		{
			"id": 348,
			"name": "ArcadeCommandResponse",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The object returned from the server following a successfully command"
					}
				]
			},
			"children": [
				{
					"id": 352,
					"name": "result",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The result of the command / query."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 243,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L243"
						}
					],
					"type": {
						"type": "reference",
						"target": 353,
						"name": "T",
						"package": "@valence-corp/sprite",
						"qualifiedName": "ArcadeCommandResponse.T",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 351,
					"name": "serverName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the server returning the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 239,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L239"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 349,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user that issued the command / query."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 233,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L233"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 350,
					"name": "version",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The version of ArcadeDB returning the result."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 235,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L235"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						352,
						351,
						349,
						350
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 229,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L229"
				}
			],
			"typeParameters": [
				{
					"id": 353,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			]
		},
		{
			"id": 269,
			"name": "ISpriteConnection",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Stores the details of the server connection for use in\nfetch requests with the ArcadeDB Server."
					}
				]
			},
			"children": [
				{
					"id": 270,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL (including port) of the database. (i.e. http://localhost:2480/)"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 20,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 271,
					"name": "headers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The headers of the Fetch request"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 22,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L22"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 272,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 274,
									"name": "Authorization",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/client.ts",
											"line": 24,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L24"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 273,
									"name": "Content-Type",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/client.ts",
											"line": 23,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L23"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										274,
										273
									]
								}
							],
							"sources": [
								{
									"fileName": "types/client.ts",
									"line": 22,
									"character": 11,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L22"
								}
							]
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						270,
						271
					]
				}
			],
			"sources": [
				{
					"fileName": "types/client.ts",
					"line": 18,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L18"
				}
			]
		},
		{
			"id": 411,
			"name": "ISpriteCreateArcadeUser",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 414,
					"name": "databases",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An object containing databases to add the user to, and the\npermisisions to grant them \\\n(i.e. "
							},
							{
								"kind": "code",
								"text": "`{ myDatabase: \"ADMIN\" }`"
							},
							{
								"kind": "text",
								"text": ")"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L11"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 415,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 11,
									"character": 13,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L11"
								}
							],
							"indexSignature": {
								"id": 416,
								"name": "__index",
								"variant": "signature",
								"kind": 8192,
								"flags": {},
								"sources": [
									{
										"fileName": "types/server.ts",
										"line": 11,
										"character": 15,
										"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L11"
									}
								],
								"parameters": [
									{
										"id": 417,
										"name": "key",
										"variant": "param",
										"kind": 32768,
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					}
				},
				{
					"id": 413,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The password of the database user to create"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 5,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L5"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 412,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The username of the database user to create"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 3,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L3"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						414,
						413,
						412
					]
				}
			],
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 1,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L1"
				}
			]
		},
		{
			"id": 301,
			"name": "ISpriteCreateTypeOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to create a new type with."
					}
				]
			},
			"children": [
				{
					"id": 304,
					"name": "buckets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A bucket-name, or an array of bucket-names you want this type to use."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 123,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L123"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 303,
					"name": "extends",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines a super-type you want to extend with this type."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 119,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L119"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
							"qualifiedName": "Exclude"
						},
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 306,
									"name": "S",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteCreateTypeOptions.S",
									"refersToTypeParameter": true
								}
							},
							{
								"type": "reference",
								"target": 307,
								"name": "N",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteCreateTypeOptions.N",
								"refersToTypeParameter": true
							}
						],
						"name": "Exclude",
						"package": "typescript"
					}
				},
				{
					"id": 302,
					"name": "ifNotExists",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When set to true, the type creation will be ignored if the\ntype already exists (instead of failing with an error)."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 115,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L115"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 305,
					"name": "totalBuckets",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the total number of buckets you want to create for this type. The"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n1\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 128,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						304,
						303,
						302,
						305
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 109,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L109"
				}
			],
			"typeParameters": [
				{
					"id": 306,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 307,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 306,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteCreateTypeOptions.S",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeNames",
						"package": "@valence-corp/sprite"
					}
				}
			]
		},
		{
			"id": 297,
			"name": "ISpriteDatabaseClientParameters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters used to create a "
					},
					{
						"kind": "code",
						"text": "`SpriteDatabase`"
					},
					{
						"kind": "text",
						"text": "\nintance when there is an existing instance of a\n"
					},
					{
						"kind": "code",
						"text": "`SpriteRestClient`"
					},
					{
						"kind": "text",
						"text": ", such as when intantiated\nfrom a method in the "
					},
					{
						"kind": "code",
						"text": "`SpriteServer`"
					},
					{
						"kind": "text",
						"text": " class"
					}
				]
			},
			"children": [
				{
					"id": 298,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The "
							},
							{
								"kind": "code",
								"text": "`SpriteRestClient`"
							},
							{
								"kind": "text",
								"text": " instance"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 87,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L87"
						}
					],
					"type": {
						"type": "reference",
						"target": {
							"sourceFileName": "src/SpriteRestClient.ts",
							"qualifiedName": "SpriteRestClient"
						},
						"name": "SpriteRestClient",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 299,
					"name": "databaseName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the database to connect to."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 91,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L91"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						298,
						299
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 83,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L83"
				}
			]
		},
		{
			"id": 292,
			"name": "ISpriteDatabaseConnectionParameters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters necessary to perform opertations\non a target ArcadeDB database."
					}
				]
			},
			"children": [
				{
					"id": 294,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL (including port) of the database. (i.e. http://localhost:2480/)"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 266,
						"name": "ISpriteRestClientConnectionParameters.address"
					}
				},
				{
					"id": 293,
					"name": "databaseName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the database to connect to."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L74"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 296,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The password to connect to the database. (i.e. \"myPassword\")"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 268,
						"name": "ISpriteRestClientConnectionParameters.password"
					}
				},
				{
					"id": 295,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The username to connect to the database. (i.e. \"root\")"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 267,
						"name": "ISpriteRestClientConnectionParameters.username"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						294,
						293,
						296,
						295
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 69,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L69"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 265,
					"name": "ISpriteRestClientConnectionParameters",
					"package": "@valence-corp/sprite"
				}
			]
		},
		{
			"id": 382,
			"name": "ISpriteDeleteFromOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for a "
					},
					{
						"kind": "code",
						"text": "`deleteFrom`"
					},
					{
						"kind": "text",
						"text": " operation as executed \nvia a "
					},
					{
						"kind": "code",
						"text": "`SpriteDatabase`"
					},
					{
						"kind": "text",
						"text": " modality."
					}
				]
			},
			"children": [
				{
					"id": 385,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum number of records in the result-set."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 383,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L383"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 386,
					"name": "return",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines what is returned following the command: the count of the records before ("
							},
							{
								"kind": "code",
								"text": "`BEFORE`"
							},
							{
								"kind": "text",
								"text": ") or following deletion ("
							},
							{
								"kind": "code",
								"text": "`COUNT`"
							},
							{
								"kind": "text",
								"text": ")."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n'COUNT'\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 388,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L388"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": "BEFORE"
							},
							{
								"type": "literal",
								"value": "COUNT"
							}
						]
					}
				},
				{
					"id": 384,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration of the timeout in milliseconds."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 378,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L378"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 383,
					"name": "where",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Designates conditions to filter the result-set."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 374,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L374"
						}
					],
					"type": {
						"type": "reference",
						"target": 378,
						"typeArguments": [
							{
								"type": "reference",
								"target": 387,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteDeleteFromOptions.S",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 388,
								"name": "N",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteDeleteFromOptions.N",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 389,
								"name": "P",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteDeleteFromOptions.P",
								"refersToTypeParameter": true
							}
						],
						"name": "SpriteWhereClause",
						"package": "@valence-corp/sprite"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						385,
						386,
						384,
						383
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 366,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L366"
				}
			],
			"typeParameters": [
				{
					"id": 387,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 388,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 387,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteDeleteFromOptions.S",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeNames",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 389,
					"name": "P",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 373,
							"typeArguments": [
								{
									"type": "reference",
									"target": 387,
									"name": "S",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteDeleteFromOptions.S",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 388,
									"name": "N",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteDeleteFromOptions.N",
									"refersToTypeParameter": true
								}
							],
							"name": "WithRid",
							"package": "@valence-corp/sprite"
						}
					}
				}
			]
		},
		{
			"id": 314,
			"name": "ISpriteDropTypeOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for a database.dropType() command"
					}
				]
			},
			"children": [
				{
					"id": 315,
					"name": "ifExists",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Prevent errors if the type does not exits when attempting to drop it."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse;\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 149,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L149"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 316,
					"name": "unsafe",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether the command drops non-empty edge and vertex types. Note, this can\ndisrupt data consistency. Be sure to create a backup before running it.\n@default: false"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 155,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L155"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						315,
						316
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 144,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L144"
				}
			]
		},
		{
			"id": 399,
			"name": "ISpriteEdgeOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options associated with creating a new edge."
					}
				]
			},
			"children": [
				{
					"id": 409,
					"name": "batchSize",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines whether it breaks the command down into smaller blocks and the size of\nthe batches. This helps to avoid memory issues when the number of vertices is\ntoo high."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\n100\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 74,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L74"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 401,
					"name": "bucket",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The bucket to store the edge in."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nundefined\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 39,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 400,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data to populate the edge with."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 34,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L34"
						}
					],
					"type": {
						"type": "reference",
						"target": 308,
						"typeArguments": [
							{
								"type": "reference",
								"target": 410,
								"name": "D",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteEdgeOptions.D",
								"refersToTypeParameter": true
							}
						],
						"name": "OmitMeta",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 404,
					"name": "ifNotExists",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "When set to "
							},
							{
								"kind": "code",
								"text": "`true`"
							},
							{
								"kind": "text",
								"text": ", skips the creation of the edge in another edge already exists with the same\ndirection (same from/to) and same edge type, instead of throwing an error."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 57,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L57"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 405,
					"name": "retry",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 58,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L58"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 406,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 407,
									"name": "attempts",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The number of retries to attempt in the event of conflict, (optimistic approach)."
											}
										]
									},
									"sources": [
										{
											"fileName": "types/edge.ts",
											"line": 62,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L62"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 408,
									"name": "wait",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The wait time (in ms), between retries."
											}
										]
									},
									"sources": [
										{
											"fileName": "types/edge.ts",
											"line": 66,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L66"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										407,
										408
									]
								}
							],
							"sources": [
								{
									"fileName": "types/edge.ts",
									"line": 58,
									"character": 10,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L58"
								}
							]
						}
					}
				},
				{
					"id": 403,
					"name": "unidirectional",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Creates a unidirectional edge; by default edges are bidirectional"
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 51,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L51"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 402,
					"name": "upsert",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Skip creation if the edge already exists between two vertices (i.e. the edge\nmust be unique between the vertices). This works only if the edge type has a\n"
							},
							{
								"kind": "code",
								"text": "`UNIQUE`"
							},
							{
								"kind": "text",
								"text": " index on "
							},
							{
								"kind": "code",
								"text": "`from`"
							},
							{
								"kind": "text",
								"text": "/"
							},
							{
								"kind": "code",
								"text": "`to`"
							},
							{
								"kind": "text",
								"text": " fields, otherwise the creation fails."
							}
						],
						"blockTags": [
							{
								"tag": "@default",
								"content": [
									{
										"kind": "code",
										"text": "```ts\nfalse\n```"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 46,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L46"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						409,
						401,
						400,
						404,
						405,
						403,
						402
					]
				}
			],
			"sources": [
				{
					"fileName": "types/edge.ts",
					"line": 30,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L30"
				}
			],
			"typeParameters": [
				{
					"id": 410,
					"name": "D",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 390,
			"name": "ISpriteIndexdescriptor",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 392,
					"name": "key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The key of the property to select an index for."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L11"
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": 395,
								"name": "N",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteIndexdescriptor.N",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 394,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteIndexdescriptor.S",
								"refersToTypeParameter": true
							}
						}
					}
				},
				{
					"id": 391,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the record to select an index for."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L7"
						}
					],
					"type": {
						"type": "reference",
						"target": 395,
						"name": "N",
						"package": "@valence-corp/sprite",
						"qualifiedName": "ISpriteIndexdescriptor.N",
						"refersToTypeParameter": true
					}
				},
				{
					"id": 393,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the property key to select an index for."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/edge.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L15"
						}
					],
					"type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": 395,
									"name": "N",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteIndexdescriptor.N",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 394,
									"name": "S",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteIndexdescriptor.S",
									"refersToTypeParameter": true
								}
							}
						},
						"objectType": {
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": 395,
								"name": "N",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteIndexdescriptor.N",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 394,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteIndexdescriptor.S",
								"refersToTypeParameter": true
							}
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						392,
						391,
						393
					]
				}
			],
			"sources": [
				{
					"fileName": "types/edge.ts",
					"line": 3,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L3"
				}
			],
			"typeParameters": [
				{
					"id": 394,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 395,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 394,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteIndexdescriptor.S",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeNames",
						"package": "@valence-corp/sprite"
					}
				}
			]
		},
		{
			"id": 310,
			"name": "ISpriteInsertRecordOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options to insert a new record with"
					}
				]
			},
			"children": [
				{
					"id": 312,
					"name": "bucket",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The bucket to store the record in"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 138,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L138"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 311,
					"name": "data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The data to populate the newly created reacord with"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 136,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L136"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"target": 308,
								"typeArguments": [
									{
										"type": "reference",
										"target": 313,
										"name": "T",
										"package": "@valence-corp/sprite",
										"qualifiedName": "ISpriteInsertRecordOptions.T",
										"refersToTypeParameter": true
									}
								],
								"name": "OmitMeta",
								"package": "@valence-corp/sprite"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 308,
									"typeArguments": [
										{
											"type": "reference",
											"target": 313,
											"name": "T",
											"package": "@valence-corp/sprite",
											"qualifiedName": "ISpriteInsertRecordOptions.T",
											"refersToTypeParameter": true
										}
									],
									"name": "OmitMeta",
									"package": "@valence-corp/sprite"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						312,
						311
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 134,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L134"
				}
			],
			"typeParameters": [
				{
					"id": 313,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			]
		},
		{
			"id": 265,
			"name": "ISpriteRestClientConnectionParameters",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The parameters required to connect to the ArcadeDB server."
					}
				]
			},
			"children": [
				{
					"id": 266,
					"name": "address",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL (including port) of the database. (i.e. http://localhost:2480/)"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 7,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L7"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 268,
					"name": "password",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The password to connect to the database. (i.e. \"myPassword\")"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 11,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 267,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The username to connect to the database. (i.e. \"root\")"
							}
						]
					},
					"sources": [
						{
							"fileName": "types/client.ts",
							"line": 9,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						266,
						268,
						267
					]
				}
			],
			"sources": [
				{
					"fileName": "types/client.ts",
					"line": 5,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/client.ts#L5"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 292,
					"name": "ISpriteDatabaseConnectionParameters"
				}
			]
		},
		{
			"id": 358,
			"name": "ISpriteSelectFromOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Options for a "
					},
					{
						"kind": "code",
						"text": "`selectFrom`"
					},
					{
						"kind": "text",
						"text": " operation, as executed via a "
					},
					{
						"kind": "code",
						"text": "`SpriteDatabase`"
					},
					{
						"kind": "text",
						"text": " modality."
					}
				]
			},
			"children": [
				{
					"id": 365,
					"name": "limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum number of records in the result-set. You may find this useful in\nPagination, when using it in conjunction with the "
							},
							{
								"kind": "code",
								"text": "`skip`"
							},
							{
								"kind": "text",
								"text": " option."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 326,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L326"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 360,
					"name": "orderBy",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Designates the field with which to order the result-set.\nUse the optional 'ASC' and 'DESC' operators to define the direction of the order."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 308,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L308"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 361,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 363,
									"name": "direction",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Defines the direction to sort the result (ASCending or DESCending)."
											}
										],
										"blockTags": [
											{
												"tag": "@default",
												"content": [
													{
														"kind": "code",
														"text": "```ts\n'ASC'.\n```"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 314,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L314"
										}
									],
									"type": {
										"type": "union",
										"types": [
											{
												"type": "literal",
												"value": "ASC"
											},
											{
												"type": "literal",
												"value": "DESC"
											}
										]
									}
								},
								{
									"id": 362,
									"name": "field",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 309,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L309"
										}
									],
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "indexedAccess",
											"indexType": {
												"type": "reference",
												"target": 371,
												"name": "N",
												"package": "@valence-corp/sprite",
												"qualifiedName": "ISpriteSelectFromOptions.N",
												"refersToTypeParameter": true
											},
											"objectType": {
												"type": "reference",
												"target": 370,
												"name": "S",
												"package": "@valence-corp/sprite",
												"qualifiedName": "ISpriteSelectFromOptions.S",
												"refersToTypeParameter": true
											}
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										363,
										362
									]
								}
							],
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 308,
									"character": 12,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L308"
								}
							]
						}
					}
				},
				{
					"id": 364,
					"name": "skip",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the number of records you want to skip from the start of the result-set.\nYou mayfind this useful in Pagination, when using it in conjunction with the\nlimit "
							},
							{
								"kind": "code",
								"text": "`option`"
							},
							{
								"kind": "text",
								"text": "."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 321,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L321"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 366,
					"name": "timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Defines the maximum time in milliseconds for the query, and optionally the\nexception strategy to use."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 331,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L331"
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 367,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 368,
									"name": "duration",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The duration of the timeout in milliseconds."
											}
										]
									},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 335,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L335"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 369,
									"name": "strategy",
									"variant": "declaration",
									"kind": 1024,
									"flags": {
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The timeout strategy to use.\\\n"
											},
											{
												"kind": "code",
												"text": "`RETURN`"
											},
											{
												"kind": "text",
												"text": " Truncates the result-set, returning the data collected up to the timeout.\\\n"
											},
											{
												"kind": "code",
												"text": "`EXCEPTION`"
											},
											{
												"kind": "text",
												"text": " Raises an exception."
											}
										]
									},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 341,
											"character": 4,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L341"
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "src/nodes/select/from/strategy.ts",
											"qualifiedName": "ArcadeSelectTimeoutStrategy"
										},
										"name": "ArcadeSelectTimeoutStrategy",
										"package": "@valence-corp/sprite"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										368,
										369
									]
								}
							],
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 331,
									"character": 12,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L331"
								}
							]
						}
					}
				},
				{
					"id": 359,
					"name": "where",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Designates conditions to filter the result-set."
							}
						]
					},
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 303,
							"character": 2,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L303"
						}
					],
					"type": {
						"type": "reference",
						"target": 378,
						"typeArguments": [
							{
								"type": "reference",
								"target": 370,
								"name": "S",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteSelectFromOptions.S",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 371,
								"name": "N",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteSelectFromOptions.N",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 372,
								"name": "P",
								"package": "@valence-corp/sprite",
								"qualifiedName": "ISpriteSelectFromOptions.P",
								"refersToTypeParameter": true
							}
						],
						"name": "SpriteWhereClause",
						"package": "@valence-corp/sprite"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						365,
						360,
						364,
						366,
						359
					]
				}
			],
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 295,
					"character": 17,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L295"
				}
			],
			"typeParameters": [
				{
					"id": 370,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 371,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 370,
							"name": "S",
							"package": "@valence-corp/sprite",
							"qualifiedName": "ISpriteSelectFromOptions.S",
							"refersToTypeParameter": true
						}
					}
				},
				{
					"id": 372,
					"name": "P",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 373,
							"typeArguments": [
								{
									"type": "reference",
									"target": 370,
									"name": "S",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteSelectFromOptions.S",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 371,
									"name": "N",
									"package": "@valence-corp/sprite",
									"qualifiedName": "ISpriteSelectFromOptions.N",
									"refersToTypeParameter": true
								}
							],
							"name": "WithRid",
							"package": "@valence-corp/sprite"
						}
					}
				}
			]
		},
		{
			"id": 324,
			"name": "ArcadeBucketSelectionStrategies",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "How the bucket will be selected for a newly created record of this type"
					}
				],
				"blockTags": [
					{
						"tag": "@default",
						"content": [
							{
								"kind": "code",
								"text": "```ts\n'round-robin'\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 167,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L167"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "round-robin"
					},
					{
						"type": "literal",
						"value": "thread"
					},
					{
						"type": "literal",
						"value": "partitioned<primary-key>"
					}
				]
			}
		},
		{
			"id": 526,
			"name": "ArcadeCreateEdgeResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Result from the ArcadeDB server for a "
					},
					{
						"kind": "code",
						"text": "`CREATE EDGE`"
					},
					{
						"kind": "text",
						"text": " command"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/operators.ts",
					"line": 29,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L29"
				}
			],
			"typeParameters": [
				{
					"id": 527,
					"name": "E",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 528,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 527,
								"name": "E",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeNames",
						"package": "@valence-corp/sprite"
					}
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "indexedAccess",
					"indexType": {
						"type": "reference",
						"target": 528,
						"name": "N",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					},
					"objectType": {
						"type": "reference",
						"target": 527,
						"name": "E",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					}
				}
			}
		},
		{
			"id": 525,
			"name": "ArcadeCreateTypeResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Result from the ArcadeDB server for a "
					},
					{
						"kind": "code",
						"text": "`CREATE TYPE`"
					},
					{
						"kind": "text",
						"text": " command"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/operators.ts",
					"line": 26,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L26"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 521,
					"name": "RecordOperationResponse",
					"package": "@valence-corp/sprite"
				}
			}
		},
		{
			"id": 520,
			"name": "ArcadeDeleteFromResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response of a "
					},
					{
						"kind": "code",
						"text": "`DELETE`"
					},
					{
						"kind": "text",
						"text": " command."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/operators.ts",
					"line": 12,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L12"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 517,
					"name": "DeleteFromCount",
					"package": "@valence-corp/sprite"
				}
			}
		},
		{
			"id": 336,
			"name": "ArcadeGetSchemaResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The response from a "
					},
					{
						"kind": "code",
						"text": "`SpriteDatabase.getSchema()`"
					},
					{
						"kind": "text",
						"text": " query"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 206,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L206"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 325,
					"name": "ArcadeTypeDefinition",
					"package": "@valence-corp/sprite"
				}
			}
		},
		{
			"id": 354,
			"name": "ArcadeQueryResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The object returned from the server following a successfully query"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 249,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L249"
				}
			],
			"typeParameters": [
				{
					"id": 355,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"default": {
						"type": "intrinsic",
						"name": "unknown"
					}
				}
			],
			"type": {
				"type": "reference",
				"target": 348,
				"typeArguments": [
					{
						"type": "reference",
						"target": 355,
						"name": "T",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					}
				],
				"name": "ArcadeCommandResponse",
				"package": "@valence-corp/sprite"
			}
		},
		{
			"id": 275,
			"name": "ArcadeRecordCategory",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible categories of a record in ArcadeDB,\nas they appear in the record's "
					},
					{
						"kind": "code",
						"text": "`@cat`"
					},
					{
						"kind": "text",
						"text": " property."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 11,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L11"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "d"
					},
					{
						"type": "literal",
						"value": "e"
					},
					{
						"type": "literal",
						"value": "v"
					}
				]
			}
		},
		{
			"id": 276,
			"name": "ArcadeRecordType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The possible record types, as expected to be\nsupplied to a "
					},
					{
						"kind": "code",
						"text": "`CREATE TYPE`"
					},
					{
						"kind": "text",
						"text": " sql operation."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 17,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L17"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "document"
					},
					{
						"type": "literal",
						"value": "edge"
					},
					{
						"type": "literal",
						"value": "vertex"
					}
				]
			}
		},
		{
			"id": 428,
			"name": "ArcadeServerBasicInformation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The metadata returned from the server on every operation."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 39,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L39"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 429,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 432,
							"name": "serverName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the server"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 45,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L45"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 430,
							"name": "user",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The user who performed the operation"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 41,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L41"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 431,
							"name": "version",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The version of ArcadeDB on the server"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 43,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L43"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								432,
								430,
								431
							]
						}
					],
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 39,
							"character": 43,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L39"
						}
					]
				}
			}
		},
		{
			"id": 509,
			"name": "ArcadeServerClusterInformation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 121,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L121"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 510,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 121,
							"character": 45,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L121"
						}
					]
				}
			}
		},
		{
			"id": 505,
			"name": "ArcadeServerDefaultInformation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 116,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L116"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 428,
						"name": "ArcadeServerBasicInformation",
						"package": "@valence-corp/sprite"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 506,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 507,
									"name": "metrics",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/server.ts",
											"line": 117,
											"character": 2,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L117"
										}
									],
									"type": {
										"type": "reference",
										"target": 440,
										"name": "ArcadeServerInfoMetrics",
										"package": "@valence-corp/sprite"
									}
								},
								{
									"id": 508,
									"name": "settings",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/server.ts",
											"line": 118,
											"character": 2,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L118"
										}
									],
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 433,
											"name": "ArcadeServerInfoSetting",
											"package": "@valence-corp/sprite"
										}
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										507,
										508
									]
								}
							],
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 116,
									"character": 76,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L116"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 440,
			"name": "ArcadeServerInfoMetrics",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 56,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L56"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 441,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 444,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 58,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L58"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 445,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 446,
											"name": "errors",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 58,
													"character": 12,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 449,
											"name": "hints",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 58,
													"character": 60,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 448,
											"name": "info",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 58,
													"character": 46,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										},
										{
											"id": 447,
											"name": "warnings",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 58,
													"character": 28,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L58"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												446,
												449,
												448,
												447
											]
										}
									],
									"sources": [
										{
											"fileName": "types/server.ts",
											"line": 58,
											"character": 10,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L58"
										}
									]
								}
							}
						},
						{
							"id": 442,
							"name": "meters",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 57,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L57"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 443,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"sources": [
										{
											"fileName": "types/server.ts",
											"line": 57,
											"character": 10,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L57"
										}
									]
								}
							}
						},
						{
							"id": 450,
							"name": "profiler",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 59,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L59"
								}
							],
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 451,
									"name": "__type",
									"variant": "declaration",
									"kind": 65536,
									"flags": {},
									"children": [
										{
											"id": 461,
											"name": "asyncParallelLevel",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 69,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L69"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 460,
											"name": "asyncQueueLength",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 68,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L68"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 454,
											"name": "cacheMax",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 62,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L62"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 477,
											"name": "commands",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 85,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L85"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 469,
											"name": "concurrentModificationExceptions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 77,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L77"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 504,
											"name": "configuration",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 112,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L112"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 483,
											"name": "countBucket",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 91,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L91"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 482,
											"name": "countType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 90,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L90"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 503,
											"name": "cpuCores",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 111,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L111"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 498,
											"name": "cpuLoad",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 106,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L106"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 472,
											"name": "createRecord",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 80,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L80"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 475,
											"name": "deleteRecord",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 83,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L83"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 489,
											"name": "diskFreeSpace",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 97,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L97"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 491,
											"name": "diskFreeSpacePerc",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 99,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L99"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 490,
											"name": "diskTotalSpace",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 98,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L98"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 484,
											"name": "evictionRuns",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 92,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L92"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 492,
											"name": "gcTime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 100,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L100"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 488,
											"name": "indexCompactions",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 96,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L96"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 481,
											"name": "iterateBucket",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 89,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L89"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 480,
											"name": "iterateType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 88,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L88"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 501,
											"name": "jvmAvgSafePointTime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 109,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L109"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 500,
											"name": "jvmSafePointCount",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 108,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L108"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 499,
											"name": "jvmSafePointTime",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 107,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L107"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 465,
											"name": "maxOpenFiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 73,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L73"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 462,
											"name": "pageCacheHits",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 70,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L70"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 463,
											"name": "pageCacheMiss",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 71,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L71"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 459,
											"name": "pageFlushQueueLength",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 67,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L67"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 485,
											"name": "pagesEvicted",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 93,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L93"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 455,
											"name": "pagesRead",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 63,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L63"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 457,
											"name": "pagesReadSize",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 65,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L65"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 456,
											"name": "pagesWritten",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 64,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L64"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 458,
											"name": "pagesWrittenSize",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 66,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L66"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 476,
											"name": "queries",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 84,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L84"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 495,
											"name": "ramHeapAvailablePerc",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 103,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L103"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 494,
											"name": "ramHeapMax",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 102,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L102"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 493,
											"name": "ramHeapUsed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 101,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L101"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 497,
											"name": "ramOsTotal",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 105,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L105"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 496,
											"name": "ramOsUsed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 104,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L104"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 486,
											"name": "readCachePages",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 94,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L94"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 452,
											"name": "readCacheUsed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 60,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L60"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 473,
											"name": "readRecord",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 81,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L81"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 479,
											"name": "scanBucket",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 87,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L87"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 478,
											"name": "scanType",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 86,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L86"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 502,
											"name": "totalDatabases",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 110,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L110"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 464,
											"name": "totalOpenFiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 72,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L72"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 470,
											"name": "txCommits",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 78,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L78"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 471,
											"name": "txRollbacks",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 79,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L79"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 474,
											"name": "updateRecord",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 82,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L82"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 467,
											"name": "walBytesWritten",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 75,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L75"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 466,
											"name": "walPagesWritten",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 74,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L74"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 468,
											"name": "walTotalFiles",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 76,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L76"
												}
											],
											"type": {
												"type": "literal",
												"value": 8
											}
										},
										{
											"id": 487,
											"name": "writeCachePages",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 95,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L95"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										},
										{
											"id": 453,
											"name": "writeCacheUsed",
											"variant": "declaration",
											"kind": 1024,
											"flags": {},
											"sources": [
												{
													"fileName": "types/server.ts",
													"line": 61,
													"character": 4,
													"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L61"
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "object"
											}
										}
									],
									"groups": [
										{
											"title": "Properties",
											"children": [
												461,
												460,
												454,
												477,
												469,
												504,
												483,
												482,
												503,
												498,
												472,
												475,
												489,
												491,
												490,
												484,
												492,
												488,
												481,
												480,
												501,
												500,
												499,
												465,
												462,
												463,
												459,
												485,
												455,
												457,
												456,
												458,
												476,
												495,
												494,
												493,
												497,
												496,
												486,
												452,
												473,
												479,
												478,
												502,
												464,
												470,
												471,
												474,
												467,
												466,
												468,
												487,
												453
											]
										}
									],
									"sources": [
										{
											"fileName": "types/server.ts",
											"line": 59,
											"character": 12,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L59"
										}
									]
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								444,
								442,
								450
							]
						}
					],
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 56,
							"character": 38,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L56"
						}
					]
				}
			}
		},
		{
			"id": 433,
			"name": "ArcadeServerInfoSetting",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 48,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L48"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 434,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 439,
							"name": "default",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 53,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L53"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						},
						{
							"id": 437,
							"name": "description",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 51,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L51"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 435,
							"name": "key",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 49,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L49"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 438,
							"name": "overridden",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 52,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L52"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							}
						},
						{
							"id": 436,
							"name": "value",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 50,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L50"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								439,
								437,
								435,
								438,
								436
							]
						}
					],
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 48,
							"character": 38,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L48"
						}
					]
				}
			}
		},
		{
			"id": 511,
			"name": "ArcadeServerInformation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 123,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L123"
				}
			],
			"typeParameters": [
				{
					"id": 516,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 427,
						"name": "ArcadeServerInformationLevel",
						"package": "@valence-corp/sprite"
					}
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "reference",
					"target": 516,
					"name": "T",
					"package": "@valence-corp/sprite",
					"refersToTypeParameter": true
				},
				"objectType": {
					"type": "reflection",
					"declaration": {
						"id": 512,
						"name": "__type",
						"variant": "declaration",
						"kind": 65536,
						"flags": {},
						"children": [
							{
								"id": 513,
								"name": "basic",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "types/server.ts",
										"line": 124,
										"character": 2,
										"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L124"
									}
								],
								"type": {
									"type": "reference",
									"target": 428,
									"name": "ArcadeServerBasicInformation",
									"package": "@valence-corp/sprite"
								}
							},
							{
								"id": 515,
								"name": "cluster",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "types/server.ts",
										"line": 126,
										"character": 2,
										"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L126"
									}
								],
								"type": {
									"type": "reference",
									"target": 509,
									"name": "ArcadeServerClusterInformation",
									"package": "@valence-corp/sprite"
								}
							},
							{
								"id": 514,
								"name": "default",
								"variant": "declaration",
								"kind": 1024,
								"flags": {},
								"sources": [
									{
										"fileName": "types/server.ts",
										"line": 125,
										"character": 2,
										"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L125"
									}
								],
								"type": {
									"type": "reference",
									"target": 505,
									"name": "ArcadeServerDefaultInformation",
									"package": "@valence-corp/sprite"
								}
							}
						],
						"groups": [
							{
								"title": "Properties",
								"children": [
									513,
									515,
									514
								]
							}
						],
						"sources": [
							{
								"fileName": "types/server.ts",
								"line": 123,
								"character": 78,
								"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L123"
							}
						]
					}
				}
			}
		},
		{
			"id": 427,
			"name": "ArcadeServerInformationLevel",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The level of detail that should be returned for a\n"
					},
					{
						"kind": "code",
						"text": "`SpriteServer.getInformation()`"
					},
					{
						"kind": "text",
						"text": " request"
					}
				],
				"blockTags": [
					{
						"tag": "@default",
						"content": [
							{
								"kind": "code",
								"text": "```ts\n'default'\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 34,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L34"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "basic"
					},
					{
						"type": "literal",
						"value": "default"
					},
					{
						"type": "literal",
						"value": "cluster"
					}
				]
			}
		},
		{
			"id": 344,
			"name": "ArcadeSqlExplanation",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An object representing the explanation of an\nSQL command."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 221,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L221"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 345,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 346,
							"name": "executionPlan",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 222,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L222"
								}
							],
							"type": {
								"type": "reference",
								"target": 337,
								"name": "ArcadeSqlExplanationExecutionPlan",
								"package": "@valence-corp/sprite"
							}
						},
						{
							"id": 347,
							"name": "executionPlanAsString",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 223,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L223"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								346,
								347
							]
						}
					],
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 221,
							"character": 35,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L221"
						}
					]
				}
			}
		},
		{
			"id": 337,
			"name": "ArcadeSqlExplanationExecutionPlan",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "SQL Explanation Execution Plan"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 209,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L209"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 338,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 341,
							"name": "cost",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 212,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L212"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 340,
							"name": "javaType",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 211,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L211"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 342,
							"name": "prettyPrint",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 213,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L213"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 343,
							"name": "steps",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 214,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L214"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "object"
								}
							}
						},
						{
							"id": 339,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 210,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L210"
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "literal",
										"value": "QueryExecutionPlan"
									},
									{
										"type": "literal",
										"value": "DDLExecutionPlan"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								341,
								340,
								342,
								343,
								339
							]
						}
					],
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 209,
							"character": 48,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L209"
						}
					]
				}
			}
		},
		{
			"id": 300,
			"name": "ArcadeSupportedQueryLanguages",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The Query languages supported by ArcadeDB, supplied as a parameter\nto "
					},
					{
						"kind": "code",
						"text": "`SpriteDatabase.query()`"
					},
					{
						"kind": "text",
						"text": " and "
					},
					{
						"kind": "code",
						"text": "`SpriteDatabase.command()`"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 98,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L98"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": "sql"
					},
					{
						"type": "literal",
						"value": "sqlscript"
					},
					{
						"type": "literal",
						"value": "graphql"
					},
					{
						"type": "literal",
						"value": "cypher"
					},
					{
						"type": "literal",
						"value": "gremlin"
					},
					{
						"type": "literal",
						"value": "mongo"
					}
				]
			}
		},
		{
			"id": 325,
			"name": "ArcadeTypeDefinition",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A type definition returned by ArcadeDB when a getSchema command\nis compeleted."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 176,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L176"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 326,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 331,
							"name": "bucketSelectionStrategy",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "How the bucket will be selected for a newly created record of this type"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 190,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L190"
								}
							],
							"type": {
								"type": "reference",
								"target": 324,
								"name": "ArcadeBucketSelectionStrategies",
								"package": "@valence-corp/sprite"
							}
						},
						{
							"id": 330,
							"name": "buckets",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The buckets associated with this type."
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 188,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L188"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 335,
							"name": "custom",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "An object for custom user-defined properties for this type"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 202,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L202"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Record"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "unknown"
									}
								],
								"name": "Record",
								"package": "typescript"
							}
						},
						{
							"id": 334,
							"name": "indexes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Indexes defined for records of this type"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 200,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L200"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 327,
							"name": "name",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The name of the type"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 178,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L178"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 332,
							"name": "parentTypes",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Super types associated with this type."
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 194,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L194"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 333,
							"name": "properties",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Properties defined for this type."
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 198,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L198"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						},
						{
							"id": 329,
							"name": "records",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The number of records with this type name"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 184,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L184"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 328,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category of the type (document, vertex, or edge)"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 180,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L180"
								}
							],
							"type": {
								"type": "reference",
								"target": 276,
								"name": "ArcadeRecordType",
								"package": "@valence-corp/sprite"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								331,
								330,
								335,
								334,
								327,
								332,
								333,
								329,
								328
							]
						}
					],
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 176,
							"character": 35,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L176"
						}
					]
				}
			}
		},
		{
			"id": 529,
			"name": "ArcadeUpdateOneResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Result from the ArcadeDB server for a "
					},
					{
						"kind": "code",
						"text": "`UPDATE [@rid]`"
					},
					{
						"kind": "text",
						"text": " command"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/operators.ts",
					"line": 32,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L32"
				}
			],
			"type": {
				"type": "array",
				"elementType": {
					"type": "reference",
					"target": 521,
					"name": "RecordOperationResponse",
					"package": "@valence-corp/sprite"
				}
			}
		},
		{
			"id": 286,
			"name": "AsArcadeEdges",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Adds ArcadeDB record metadata to the types\ndefined in the schema."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 47,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L47"
				}
			],
			"typeParameters": [
				{
					"id": 287,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 287,
						"name": "S",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "intersection",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/database.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 287,
								"name": "S",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "reference",
							"target": 282,
							"name": "EdgeRecordMeta",
							"package": "@valence-corp/sprite"
						}
					]
				}
			}
		},
		{
			"id": 288,
			"name": "AsArcadeRecords",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Adds ArcadeDB record metadata to the types\ndefined in the schema. Used for Document\nand Vertex records."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 56,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L56"
				}
			],
			"typeParameters": [
				{
					"id": 289,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "mapped",
				"parameter": "K",
				"parameterType": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"target": 289,
						"name": "S",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					}
				},
				"templateType": {
					"type": "intersection",
					"types": [
						{
							"type": "indexedAccess",
							"indexType": {
								"type": "reference",
								"target": {
									"sourceFileName": "src/types/database.ts",
									"qualifiedName": "K"
								},
								"name": "K",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							},
							"objectType": {
								"type": "reference",
								"target": 289,
								"name": "S",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							}
						},
						{
							"type": "reference",
							"target": 277,
							"name": "RecordMeta",
							"package": "@valence-corp/sprite"
						}
					]
				}
			}
		},
		{
			"id": 517,
			"name": "DeleteFromCount",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The object returned in the response of a "
					},
					{
						"kind": "code",
						"text": "`DELETE`"
					},
					{
						"kind": "text",
						"text": "\ncommand."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/operators.ts",
					"line": 7,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L7"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 518,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 519,
							"name": "count",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/operators.ts",
									"line": 7,
									"character": 32,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L7"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								519
							]
						}
					],
					"sources": [
						{
							"fileName": "types/operators.ts",
							"line": 7,
							"character": 30,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L7"
						}
					]
				}
			}
		},
		{
			"id": 282,
			"name": "EdgeRecordMeta",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The metadata for an Edge record in \nArcadeDB"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 36,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L36"
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 277,
						"name": "RecordMeta",
						"package": "@valence-corp/sprite"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 283,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 284,
									"name": "@in",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`@rid`"
											},
											{
												"kind": "text",
												"text": " of the vertex the edge goes to"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 38,
											"character": 2,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L38"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 285,
									"name": "@out",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The "
											},
											{
												"kind": "code",
												"text": "`@rid`"
											},
											{
												"kind": "text",
												"text": " of the vertex the edge comes from"
											}
										]
									},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 40,
											"character": 2,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L40"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										284,
										285
									]
								}
							],
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 36,
									"character": 42,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L36"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 308,
			"name": "OmitMeta",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 131,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L131"
				}
			],
			"typeParameters": [
				{
					"id": 309,
					"name": "T",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "reference",
				"target": {
					"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
					"qualifiedName": "Omit"
				},
				"typeArguments": [
					{
						"type": "reference",
						"target": 309,
						"name": "T",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					},
					{
						"type": "union",
						"types": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 277,
									"name": "RecordMeta",
									"package": "@valence-corp/sprite"
								}
							},
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"target": 282,
									"name": "EdgeRecordMeta",
									"package": "@valence-corp/sprite"
								}
							}
						]
					}
				],
				"name": "Omit",
				"package": "typescript"
			}
		},
		{
			"id": 277,
			"name": "RecordMeta",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The base metadata for record in \nArcadeDB."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 23,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L23"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 278,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 280,
							"name": "@cat",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The category of the record."
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 27,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L27"
								}
							],
							"type": {
								"type": "reference",
								"target": 275,
								"name": "ArcadeRecordCategory",
								"package": "@valence-corp/sprite"
							}
						},
						{
							"id": 279,
							"name": "@rid",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The id of the record."
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 25,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L25"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 281,
							"name": "@type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type of the record."
									}
								]
							},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 29,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L29"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								280,
								279,
								281
							]
						}
					],
					"sources": [
						{
							"fileName": "types/database.ts",
							"line": 23,
							"character": 25,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L23"
						}
					]
				}
			}
		},
		{
			"id": 521,
			"name": "RecordOperationResponse",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The object returned as a receipt of a successfully executed\noperation."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/operators.ts",
					"line": 18,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L18"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 522,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 523,
							"name": "operation",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The operation executed"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/operators.ts",
									"line": 20,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L20"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 524,
							"name": "typeName",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The type which was the focus of the operation"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/operators.ts",
									"line": 22,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L22"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								523,
								524
							]
						}
					],
					"sources": [
						{
							"fileName": "types/operators.ts",
							"line": 18,
							"character": 38,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/operators.ts#L18"
						}
					]
				}
			}
		},
		{
			"id": 418,
			"name": "SpriteArcadeServerEvent",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes an event on the ArcadeDB server"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 15,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L15"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 419,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 422,
							"name": "message",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 18,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L18"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 420,
							"name": "time",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 16,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L16"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						},
						{
							"id": 421,
							"name": "type",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 17,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L17"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								422,
								420,
								421
							]
						}
					],
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 15,
							"character": 38,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L15"
						}
					]
				}
			}
		},
		{
			"id": 423,
			"name": "SpriteArcadeServerEvents",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The ArcadeDB Server Events Log"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/server.ts",
					"line": 22,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L22"
				}
			],
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 424,
					"name": "__type",
					"variant": "declaration",
					"kind": 65536,
					"flags": {},
					"children": [
						{
							"id": 425,
							"name": "events",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "The list of server events"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 24,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L24"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 418,
									"name": "SpriteArcadeServerEvent",
									"package": "@valence-corp/sprite"
								}
							}
						},
						{
							"id": 426,
							"name": "files",
							"variant": "declaration",
							"kind": 1024,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Event log files"
									}
								]
							},
							"sources": [
								{
									"fileName": "types/server.ts",
									"line": 26,
									"character": 2,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L26"
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					],
					"groups": [
						{
							"title": "Properties",
							"children": [
								425,
								426
							]
						}
					],
					"sources": [
						{
							"fileName": "types/server.ts",
							"line": 22,
							"character": 39,
							"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/server.ts#L22"
						}
					]
				}
			}
		},
		{
			"id": 396,
			"name": "SpriteEdgeVertexDescriptor",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Describes a "
					},
					{
						"kind": "code",
						"text": "`to`"
					},
					{
						"kind": "text",
						"text": " or "
					},
					{
						"kind": "code",
						"text": "`from`"
					},
					{
						"kind": "text",
						"text": " point of an edge, either as a string (the record's "
					},
					{
						"kind": "code",
						"text": "`@rid`"
					},
					{
						"kind": "text",
						"text": "),\nor, by providing an object which describes an index of a vertex to use a\n"
					},
					{
						"kind": "code",
						"text": "`to`"
					},
					{
						"kind": "text",
						"text": "/"
					},
					{
						"kind": "code",
						"text": "`from`"
					},
					{
						"kind": "text",
						"text": " point (i.e. "
					},
					{
						"kind": "code",
						"text": "`{type: 'user', key: 'name', value: 'Jeremiah'}`"
					},
					{
						"kind": "text",
						"text": ")"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/edge.ts",
					"line": 23,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/edge.ts#L23"
				}
			],
			"typeParameters": [
				{
					"id": 397,
					"name": "V",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 398,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 397,
							"name": "V",
							"package": "@valence-corp/sprite",
							"refersToTypeParameter": true
						}
					}
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reference",
						"target": 390,
						"typeArguments": [
							{
								"type": "reference",
								"target": 397,
								"name": "V",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							},
							{
								"type": "reference",
								"target": 398,
								"name": "N",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							}
						],
						"name": "ISpriteIndexdescriptor",
						"package": "@valence-corp/sprite"
					},
					{
						"type": "intrinsic",
						"name": "string"
					}
				]
			}
		},
		{
			"id": 357,
			"name": "SpriteOperators",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Operators for a "
					},
					{
						"kind": "code",
						"text": "`WHERE`"
					},
					{
						"kind": "text",
						"text": " sql statement"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 292,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L292"
				}
			],
			"type": {
				"type": "indexedAccess",
				"indexType": {
					"type": "intrinsic",
					"name": "number"
				},
				"objectType": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"target": 356,
						"name": "COMPARISON_OPERATORS",
						"package": "@valence-corp/sprite"
					}
				}
			}
		},
		{
			"id": 317,
			"name": "SpriteTransactionCallback",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A callback which contains the operations to be conducted within a transaction"
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 159,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L159"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "reflection",
						"declaration": {
							"id": 318,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 160,
									"character": 5,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L160"
								}
							],
							"signatures": [
								{
									"id": 319,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 320,
											"name": "trx",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 109,
												"name": "SpriteTransaction",
												"package": "@valence-corp/sprite"
											}
										}
									],
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.3.3/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Promise"
										},
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "void"
											}
										],
										"name": "Promise",
										"package": "typescript"
									}
								}
							]
						}
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 321,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 161,
									"character": 5,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L161"
								}
							],
							"signatures": [
								{
									"id": 322,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {},
									"parameters": [
										{
											"id": 323,
											"name": "trx",
											"variant": "param",
											"kind": 32768,
											"flags": {},
											"type": {
												"type": "reference",
												"target": 109,
												"name": "SpriteTransaction",
												"package": "@valence-corp/sprite"
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "void"
									}
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 378,
			"name": "SpriteWhereClause",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "An array with three items used to describe a "
					},
					{
						"kind": "code",
						"text": "`where`"
					},
					{
						"kind": "text",
						"text": " statement."
					}
				],
				"blockTags": [
					{
						"tag": "@example",
						"content": [
							{
								"kind": "code",
								"text": "```ts\n['@rid', '==', '#0:0']\n```"
							}
						]
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 356,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L356"
				}
			],
			"typeParameters": [
				{
					"id": 379,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 380,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 379,
								"name": "S",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeNames",
						"package": "@valence-corp/sprite"
					}
				},
				{
					"id": 381,
					"name": "P",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 373,
							"typeArguments": [
								{
									"type": "reference",
									"target": 379,
									"name": "S",
									"package": "@valence-corp/sprite",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 380,
									"name": "N",
									"package": "@valence-corp/sprite",
									"refersToTypeParameter": true
								}
							],
							"name": "WithRid",
							"package": "@valence-corp/sprite"
						}
					}
				}
			],
			"type": {
				"type": "tuple",
				"elements": [
					{
						"type": "reference",
						"target": 381,
						"name": "P",
						"package": "@valence-corp/sprite",
						"refersToTypeParameter": true
					},
					{
						"type": "reference",
						"target": 357,
						"name": "SpriteOperators",
						"package": "@valence-corp/sprite"
					},
					{
						"type": "indexedAccess",
						"indexType": {
							"type": "reference",
							"target": 381,
							"name": "P",
							"package": "@valence-corp/sprite",
							"refersToTypeParameter": true
						},
						"objectType": {
							"type": "reference",
							"target": 373,
							"typeArguments": [
								{
									"type": "reference",
									"target": 379,
									"name": "S",
									"package": "@valence-corp/sprite",
									"refersToTypeParameter": true
								},
								{
									"type": "reference",
									"target": 380,
									"name": "N",
									"package": "@valence-corp/sprite",
									"refersToTypeParameter": true
								}
							],
							"name": "WithRid",
							"package": "@valence-corp/sprite"
						}
					}
				]
			}
		},
		{
			"id": 290,
			"name": "TypeNames",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "The TypeNames in a supplied schema."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 63,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L63"
				}
			],
			"typeParameters": [
				{
					"id": 291,
					"name": "Schema",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "reference",
					"target": 291,
					"name": "Schema",
					"package": "@valence-corp/sprite",
					"refersToTypeParameter": true
				}
			}
		},
		{
			"id": 373,
			"name": "WithRid",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A base type, with an "
					},
					{
						"kind": "code",
						"text": "`@rid`"
					},
					{
						"kind": "text",
						"text": " property added."
					}
				]
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 348,
					"character": 12,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L348"
				}
			],
			"typeParameters": [
				{
					"id": 376,
					"name": "S",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {}
				},
				{
					"id": 377,
					"name": "N",
					"variant": "typeParam",
					"kind": 131072,
					"flags": {},
					"type": {
						"type": "reference",
						"target": 290,
						"typeArguments": [
							{
								"type": "reference",
								"target": 376,
								"name": "S",
								"package": "@valence-corp/sprite",
								"refersToTypeParameter": true
							}
						],
						"name": "TypeNames",
						"package": "@valence-corp/sprite"
					}
				}
			],
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reference",
						"target": 308,
						"typeArguments": [
							{
								"type": "indexedAccess",
								"indexType": {
									"type": "reference",
									"target": 377,
									"name": "N",
									"package": "@valence-corp/sprite",
									"refersToTypeParameter": true
								},
								"objectType": {
									"type": "reference",
									"target": 376,
									"name": "S",
									"package": "@valence-corp/sprite",
									"refersToTypeParameter": true
								}
							}
						],
						"name": "OmitMeta",
						"package": "@valence-corp/sprite"
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 374,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {},
							"children": [
								{
									"id": 375,
									"name": "@rid",
									"variant": "declaration",
									"kind": 1024,
									"flags": {},
									"sources": [
										{
											"fileName": "types/database.ts",
											"line": 349,
											"character": 2,
											"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L349"
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"groups": [
								{
									"title": "Properties",
									"children": [
										375
									]
								}
							],
							"sources": [
								{
									"fileName": "types/database.ts",
									"line": 348,
									"character": 66,
									"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L348"
								}
							]
						}
					}
				]
			}
		},
		{
			"id": 356,
			"name": "COMPARISON_OPERATORS",
			"variant": "declaration",
			"kind": 32,
			"flags": {
				"isConst": true
			},
			"sources": [
				{
					"fileName": "types/database.ts",
					"line": 252,
					"character": 21,
					"url": "https://github.com/valence-corp/sprite/blob/fcfbc66/src/types/database.ts#L252"
				}
			],
			"type": {
				"type": "typeOperator",
				"operator": "readonly",
				"target": {
					"type": "tuple",
					"elements": [
						{
							"type": "literal",
							"value": "="
						},
						{
							"type": "literal",
							"value": "=="
						},
						{
							"type": "literal",
							"value": "!="
						},
						{
							"type": "literal",
							"value": "<>"
						},
						{
							"type": "literal",
							"value": ">"
						},
						{
							"type": "literal",
							"value": ">="
						},
						{
							"type": "literal",
							"value": "<"
						},
						{
							"type": "literal",
							"value": "<="
						},
						{
							"type": "literal",
							"value": "in"
						},
						{
							"type": "literal",
							"value": "not in"
						},
						{
							"type": "literal",
							"value": "is"
						},
						{
							"type": "literal",
							"value": "is not"
						},
						{
							"type": "literal",
							"value": "like"
						},
						{
							"type": "literal",
							"value": "not like"
						},
						{
							"type": "literal",
							"value": "match"
						},
						{
							"type": "literal",
							"value": "ilike"
						},
						{
							"type": "literal",
							"value": "not ilike"
						},
						{
							"type": "literal",
							"value": "@>"
						},
						{
							"type": "literal",
							"value": "<@"
						},
						{
							"type": "literal",
							"value": "&&"
						},
						{
							"type": "literal",
							"value": "?"
						},
						{
							"type": "literal",
							"value": "?&"
						},
						{
							"type": "literal",
							"value": "!<"
						},
						{
							"type": "literal",
							"value": "!>"
						},
						{
							"type": "literal",
							"value": "<=>"
						},
						{
							"type": "literal",
							"value": "!~"
						},
						{
							"type": "literal",
							"value": "~"
						},
						{
							"type": "literal",
							"value": "~*"
						},
						{
							"type": "literal",
							"value": "!~*"
						},
						{
							"type": "literal",
							"value": "@@"
						},
						{
							"type": "literal",
							"value": "@@@"
						},
						{
							"type": "literal",
							"value": "!!"
						},
						{
							"type": "literal",
							"value": "<->"
						},
						{
							"type": "literal",
							"value": "regexp"
						},
						{
							"type": "literal",
							"value": "is distinct from"
						},
						{
							"type": "literal",
							"value": "is not distinct from"
						}
					]
				}
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				125,
				186,
				1,
				55,
				109
			]
		},
		{
			"title": "Interfaces",
			"children": [
				348,
				269,
				411,
				301,
				297,
				292,
				382,
				314,
				399,
				390,
				310,
				265,
				358
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				324,
				526,
				525,
				520,
				336,
				354,
				275,
				276,
				428,
				509,
				505,
				440,
				433,
				511,
				427,
				344,
				337,
				300,
				325,
				529,
				286,
				288,
				517,
				282,
				308,
				277,
				521,
				418,
				423,
				396,
				357,
				317,
				378,
				290,
				373
			]
		},
		{
			"title": "Variables",
			"children": [
				356
			]
		}
	],
	"packageName": "@valence-corp/sprite",
	"readme": [
		{
			"kind": "text",
			"text": "# Sprite\n\nSprite is a TypeScript driver for ArcadeDB. It is still in early development, and should be considered experimental.\n\n## Installation\n\n"
		},
		{
			"kind": "code",
			"text": "`pnpm install @valence-corp/sprite`"
		},
		{
			"kind": "text",
			"text": "\n\n## Examples\n\n### SpriteServer\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\n@import { SpriteServer } from '@valence-corp/sprite';\n\nconst server = new SpriteServer({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480'\n});\n\nasync function example() {\n\n  const ready = await server.serverReady();\n  console.log(ready);\n  // true;\n\n  try {\n    const db = await server.createDatabase('aDatabase');\n    console.log(db.name);\n    // 'aDatabase'\n  } catch (error) {\n    throw new Error('Could not create database', { cause: error });\n  }\n}\n\nexample();\n\n```"
		},
		{
			"kind": "text",
			"text": "\n\n\n### SpriteDatabase\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\n@import { SpriteDatabase } from '@valence-corp/sprite';\n\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\nasync function example() {\n  try {\n    const result = await database.getSchema();\n    console.log(result);\n    // [...]\n  } catch (error) {\n    throw new Error('Could not get database schema', { cause: error });\n  }\n}\n\nexample();\n\n```"
		},
		{
			"kind": "text",
			"text": "\n\n#### Working with Documents\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\n@import { SpriteDatabase } from '@valence-corp/sprite';\n\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\ntype DocumentTypes = {\n  aDocument: {\n    aProperty: string\n  }\n}\n\nconst client = database.documents<DocumentTypes>()\n\nasync function example() {\n  try {\n    await client.transaction(async (trx) => {\n      // non-idempotent operations must be\n      // conducted within a transaction\n      await client.createType('aDocument', trx);\n      const document = await client.newDocument('aDocument', trx, {\n        data: {\n          aProperty: 'aValue'\n        }\n      });\n      console.log(document);\n      // {\n      //   '@rid': '#0:0',\n      //   '@cat': 'd',\n      //   '@type': 'aDocument',\n      //   aProperty: 'aValue' \n      // }\n    });\n  } catch (error) {\n    throw new Error('Could not create database', { cause: error });\n  }\n}\n\nexample();\n\n```"
		},
		{
			"kind": "text",
			"text": "\n\n\n#### Working with Graphs\n\n"
		},
		{
			"kind": "code",
			"text": "```ts\n@import { SpriteDatabase } from '@valence-corp/sprite';\n\nconst database = new SpriteDatabase({\n  username: 'aUser',\n  password: 'aPassword',\n  address: 'http://localhost:2480',\n  databaseName: 'aDatabase'\n});\n\ntype VertexTypes = {\n  aVertex: {\n    aProperty: string\n  }\n}\n\n\ntype EdgeTypes = {\n  anEdge: {\n    aProperty: string\n  }\n}\n\nconst graph = database.graph<VertexTypes, EdgeTypes>()\n\nfunction example() {\n  try {\n    graph.transaction(async (trx) => {\n      // non-idempotent operations must be\n      // conducted within a transaction\n      await graph.createVertexType('aVertex', trx);\n      await graph.createEdgeType('anEdge', trx);\n      const vertexA = await graph.newVertex('aVertex', trx, {\n        data: {\n          aProperty: 'aValue'\n        }\n      });\n      const vertexB = await graph.newVertex('aVertex', trx, {\n        data: {\n          aProperty: 'anotherValue'\n        }\n      });\n      const edge = await graph.newEdge(\n        'anEdge',\n        vertexA['@rid'],\n        vertexB['@rid'],\n        trx,\n        {\n          data: {\n            aProperty: 'aValue',\n          },\n        },\n      );\n      console.log(edge)\n      // {\n      //  '@rid': '#3:0',\n      //  '@cat': 'e',\n      //  '@type': 'anEdge',\n      //  '@in': '#2:0',\n      //  '@out': '#1:0,\n      //  aProperty: 'aValue' \n      // }\n    });\n  } catch (error) {\n    throw new Error('Could not create database', { cause: error });\n  }\n}\n\nexample();\n\n```"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/api.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase"
		},
		"2": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.__constructor"
		},
		"3": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase"
		},
		"4": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "parameters"
		},
		"5": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase"
		},
		"6": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "parameters"
		},
		"7": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._client"
		},
		"8": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._sql"
		},
		"9": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._name"
		},
		"10": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._documentModality"
		},
		"11": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._graphModality"
		},
		"12": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.name"
		},
		"13": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.name"
		},
		"14": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.sql"
		},
		"15": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.sql"
		},
		"16": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._endpoint"
		},
		"17": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase._endpoint"
		},
		"18": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "endpoint"
		},
		"19": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.documentModality"
		},
		"20": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.documentModality"
		},
		"21": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "T"
		},
		"22": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.graphModality"
		},
		"23": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.graphModality"
		},
		"24": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "V"
		},
		"25": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "E"
		},
		"26": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.query"
		},
		"27": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.query"
		},
		"28": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "ReturnType"
		},
		"29": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "language"
		},
		"30": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "command"
		},
		"31": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "params"
		},
		"32": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.explain"
		},
		"33": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.explain"
		},
		"34": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "sql"
		},
		"35": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.command"
		},
		"36": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.command"
		},
		"37": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "T"
		},
		"38": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "language"
		},
		"39": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "command"
		},
		"40": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "transaction"
		},
		"41": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "options"
		},
		"42": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "__type"
		},
		"43": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "__type.params"
		},
		"44": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.getSchema"
		},
		"45": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.getSchema"
		},
		"46": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.newTransaction"
		},
		"47": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.newTransaction"
		},
		"48": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "isolationLevel"
		},
		"49": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.commitTransaction"
		},
		"50": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.commitTransaction"
		},
		"51": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "transactionId"
		},
		"52": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.rollbackTransaction"
		},
		"53": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "SpriteDatabase.rollbackTransaction"
		},
		"54": {
			"sourceFileName": "src/SpriteDatabase.ts",
			"qualifiedName": "transactionId"
		},
		"55": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer"
		},
		"56": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.__constructor"
		},
		"57": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer"
		},
		"58": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "parameters"
		},
		"59": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer._client"
		},
		"60": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer._validate"
		},
		"61": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.serverReady"
		},
		"62": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.serverReady"
		},
		"63": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.closeDatabase"
		},
		"64": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.closeDatabase"
		},
		"65": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "databaseName"
		},
		"66": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.openDatabase"
		},
		"67": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.openDatabase"
		},
		"68": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "databaseName"
		},
		"69": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.database"
		},
		"70": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.database"
		},
		"71": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "databaseName"
		},
		"72": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.command"
		},
		"73": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.command"
		},
		"74": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "T"
		},
		"75": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "command"
		},
		"76": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer._booleanCommand"
		},
		"77": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer._booleanCommand"
		},
		"78": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "command"
		},
		"79": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.connectCluster"
		},
		"80": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.connectCluster"
		},
		"81": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "address"
		},
		"82": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.createDatabase"
		},
		"83": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.createDatabase"
		},
		"84": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "databaseName"
		},
		"85": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.createUser"
		},
		"86": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.createUser"
		},
		"87": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "params"
		},
		"88": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.databaseExists"
		},
		"89": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.databaseExists"
		},
		"90": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "databaseName"
		},
		"91": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.disconnectCluster"
		},
		"92": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.disconnectCluster"
		},
		"93": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.dropDatabase"
		},
		"94": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.dropDatabase"
		},
		"95": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "databaseName"
		},
		"96": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.dropUser"
		},
		"97": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.dropUser"
		},
		"98": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "username"
		},
		"99": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.getEvents"
		},
		"100": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.getEvents"
		},
		"101": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.getInformation"
		},
		"102": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.getInformation"
		},
		"103": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "M"
		},
		"104": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "mode"
		},
		"105": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.listDatabases"
		},
		"106": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.listDatabases"
		},
		"107": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.shutdown"
		},
		"108": {
			"sourceFileName": "src/SpriteServer.ts",
			"qualifiedName": "SpriteServer.shutdown"
		},
		"109": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction"
		},
		"110": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.__constructor"
		},
		"111": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction"
		},
		"112": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "database"
		},
		"113": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "transactionId"
		},
		"114": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction._id"
		},
		"115": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction._committed"
		},
		"116": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.database"
		},
		"117": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.id"
		},
		"118": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.id"
		},
		"119": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.committed"
		},
		"120": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.committed"
		},
		"121": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.commit"
		},
		"122": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.commit"
		},
		"123": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.rollback"
		},
		"124": {
			"sourceFileName": "src/SpriteTransaction.ts",
			"qualifiedName": "SpriteTransaction.rollback"
		},
		"125": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality"
		},
		"126": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.__constructor"
		},
		"127": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality"
		},
		"128": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.S"
		},
		"129": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "client"
		},
		"130": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "dialect"
		},
		"131": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.newDocument"
		},
		"132": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.newDocument"
		},
		"133": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "N"
		},
		"134": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "typeName"
		},
		"135": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "transaction"
		},
		"136": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "options"
		},
		"137": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.createType"
		},
		"138": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.createType"
		},
		"139": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "N"
		},
		"140": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "typeName"
		},
		"141": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "transaction"
		},
		"142": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "options"
		},
		"143": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase._database"
		},
		"144": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase._sql"
		},
		"145": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectFrom"
		},
		"146": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectFrom"
		},
		"147": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"148": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "P"
		},
		"149": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "typeName"
		},
		"150": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "options"
		},
		"151": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.dropType"
		},
		"152": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.dropType"
		},
		"153": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"154": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "typeName"
		},
		"155": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"156": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "options"
		},
		"157": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.newTransaction"
		},
		"158": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.newTransaction"
		},
		"159": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "isolationLevel"
		},
		"160": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.transaction"
		},
		"161": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.transaction"
		},
		"162": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "callback"
		},
		"163": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "isolationLevel"
		},
		"164": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteFrom"
		},
		"165": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteFrom"
		},
		"166": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"167": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "P"
		},
		"168": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "typeName"
		},
		"169": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"170": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "options"
		},
		"171": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteOne"
		},
		"172": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteOne"
		},
		"173": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "rid"
		},
		"174": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"175": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.updateOne"
		},
		"176": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.updateOne"
		},
		"177": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"178": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "rid"
		},
		"179": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "data"
		},
		"180": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"181": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectOne"
		},
		"182": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectOne"
		},
		"183": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"184": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "rid"
		},
		"185": {
			"sourceFileName": "src/modes/DocumentModality.ts",
			"qualifiedName": "DocumentModality.S"
		},
		"186": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality"
		},
		"187": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.__constructor"
		},
		"188": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality"
		},
		"189": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.V"
		},
		"190": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.E"
		},
		"191": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "client"
		},
		"192": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "dialect"
		},
		"193": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.newVertex"
		},
		"194": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.newVertex"
		},
		"195": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "N"
		},
		"196": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "typeName"
		},
		"197": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "transaction"
		},
		"198": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "options"
		},
		"199": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.newEdge"
		},
		"200": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.newEdge"
		},
		"201": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "N"
		},
		"202": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "V1"
		},
		"203": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "V2"
		},
		"204": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "typeName"
		},
		"205": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "to"
		},
		"206": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "from"
		},
		"207": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "transaction"
		},
		"208": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "options"
		},
		"209": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.createEdgeType"
		},
		"210": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.createEdgeType"
		},
		"211": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "N"
		},
		"212": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "typeName"
		},
		"213": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "transaction"
		},
		"214": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "options"
		},
		"215": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.createVertexType"
		},
		"216": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.createVertexType"
		},
		"217": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "N"
		},
		"218": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "typeName"
		},
		"219": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "transaction"
		},
		"220": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "options"
		},
		"221": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase._database"
		},
		"222": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase._sql"
		},
		"223": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectFrom"
		},
		"224": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectFrom"
		},
		"225": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"226": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "P"
		},
		"227": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "typeName"
		},
		"228": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "options"
		},
		"229": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.dropType"
		},
		"230": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.dropType"
		},
		"231": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"232": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "typeName"
		},
		"233": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"234": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "options"
		},
		"235": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.newTransaction"
		},
		"236": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.newTransaction"
		},
		"237": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "isolationLevel"
		},
		"238": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.transaction"
		},
		"239": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.transaction"
		},
		"240": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "callback"
		},
		"241": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "isolationLevel"
		},
		"242": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteFrom"
		},
		"243": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteFrom"
		},
		"244": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"245": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "P"
		},
		"246": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "typeName"
		},
		"247": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"248": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "options"
		},
		"249": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteOne"
		},
		"250": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.deleteOne"
		},
		"251": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "rid"
		},
		"252": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"253": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.updateOne"
		},
		"254": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.updateOne"
		},
		"255": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"256": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "rid"
		},
		"257": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "data"
		},
		"258": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "transaction"
		},
		"259": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectOne"
		},
		"260": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "ModalityBase.selectOne"
		},
		"261": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "N"
		},
		"262": {
			"sourceFileName": "src/modes/ModalityBase.ts",
			"qualifiedName": "rid"
		},
		"263": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.V"
		},
		"264": {
			"sourceFileName": "src/modes/GraphModality.ts",
			"qualifiedName": "GraphModality.E"
		},
		"265": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters"
		},
		"266": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters.address"
		},
		"267": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters.username"
		},
		"268": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters.password"
		},
		"269": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteConnection"
		},
		"270": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteConnection.address"
		},
		"271": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteConnection.headers"
		},
		"272": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "__type"
		},
		"273": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "__type.Content-Type"
		},
		"274": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "__type.Authorization"
		},
		"275": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeRecordCategory"
		},
		"276": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeRecordType"
		},
		"277": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "RecordMeta"
		},
		"278": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"279": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.@rid"
		},
		"280": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.@cat"
		},
		"281": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.@type"
		},
		"282": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "EdgeRecordMeta"
		},
		"283": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"284": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.@in"
		},
		"285": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.@out"
		},
		"286": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "AsArcadeEdges"
		},
		"287": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "S"
		},
		"288": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "AsArcadeRecords"
		},
		"289": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "S"
		},
		"290": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "TypeNames"
		},
		"291": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "Schema"
		},
		"292": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDatabaseConnectionParameters"
		},
		"293": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDatabaseConnectionParameters.databaseName"
		},
		"294": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters.address"
		},
		"295": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters.username"
		},
		"296": {
			"sourceFileName": "src/types/client.ts",
			"qualifiedName": "ISpriteRestClientConnectionParameters.password"
		},
		"297": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDatabaseClientParameters"
		},
		"298": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDatabaseClientParameters.client"
		},
		"299": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDatabaseClientParameters.databaseName"
		},
		"300": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeSupportedQueryLanguages"
		},
		"301": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions"
		},
		"302": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions.ifNotExists"
		},
		"303": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions.extends"
		},
		"304": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions.buckets"
		},
		"305": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions.totalBuckets"
		},
		"306": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions.S"
		},
		"307": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteCreateTypeOptions.N"
		},
		"308": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "OmitMeta"
		},
		"309": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "T"
		},
		"310": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteInsertRecordOptions"
		},
		"311": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteInsertRecordOptions.data"
		},
		"312": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteInsertRecordOptions.bucket"
		},
		"313": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteInsertRecordOptions.T"
		},
		"314": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDropTypeOptions"
		},
		"315": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDropTypeOptions.ifExists"
		},
		"316": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDropTypeOptions.unsafe"
		},
		"317": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "SpriteTransactionCallback"
		},
		"318": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"319": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"320": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "trx"
		},
		"321": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"322": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"323": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "trx"
		},
		"324": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeBucketSelectionStrategies"
		},
		"325": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeTypeDefinition"
		},
		"326": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"327": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.name"
		},
		"328": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.type"
		},
		"329": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.records"
		},
		"330": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.buckets"
		},
		"331": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.bucketSelectionStrategy"
		},
		"332": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.parentTypes"
		},
		"333": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.properties"
		},
		"334": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.indexes"
		},
		"335": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.custom"
		},
		"336": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeGetSchemaResponse"
		},
		"337": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeSqlExplanationExecutionPlan"
		},
		"338": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"339": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.type"
		},
		"340": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.javaType"
		},
		"341": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.cost"
		},
		"342": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.prettyPrint"
		},
		"343": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.steps"
		},
		"344": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeSqlExplanation"
		},
		"345": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"346": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.executionPlan"
		},
		"347": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.executionPlanAsString"
		},
		"348": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeCommandResponse"
		},
		"349": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeCommandResponse.user"
		},
		"350": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeCommandResponse.version"
		},
		"351": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeCommandResponse.serverName"
		},
		"352": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeCommandResponse.result"
		},
		"353": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeCommandResponse.T"
		},
		"354": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ArcadeQueryResponse"
		},
		"355": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "T"
		},
		"356": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "COMPARISON_OPERATORS"
		},
		"357": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "SpriteOperators"
		},
		"358": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions"
		},
		"359": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.where"
		},
		"360": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.orderBy"
		},
		"361": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"362": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.field"
		},
		"363": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.direction"
		},
		"364": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.skip"
		},
		"365": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.limit"
		},
		"366": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.timeout"
		},
		"367": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"368": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.duration"
		},
		"369": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.strategy"
		},
		"370": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.S"
		},
		"371": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.N"
		},
		"372": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteSelectFromOptions.P"
		},
		"373": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "WithRid"
		},
		"374": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type"
		},
		"375": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "__type.@rid"
		},
		"376": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "S"
		},
		"377": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "N"
		},
		"378": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "SpriteWhereClause"
		},
		"379": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "S"
		},
		"380": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "N"
		},
		"381": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "P"
		},
		"382": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions"
		},
		"383": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.where"
		},
		"384": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.timeout"
		},
		"385": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.limit"
		},
		"386": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.return"
		},
		"387": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.S"
		},
		"388": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.N"
		},
		"389": {
			"sourceFileName": "src/types/database.ts",
			"qualifiedName": "ISpriteDeleteFromOptions.P"
		},
		"390": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteIndexdescriptor"
		},
		"391": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteIndexdescriptor.type"
		},
		"392": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteIndexdescriptor.key"
		},
		"393": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteIndexdescriptor.value"
		},
		"394": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteIndexdescriptor.S"
		},
		"395": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteIndexdescriptor.N"
		},
		"396": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "SpriteEdgeVertexDescriptor"
		},
		"397": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "V"
		},
		"398": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "N"
		},
		"399": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions"
		},
		"400": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.data"
		},
		"401": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.bucket"
		},
		"402": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.upsert"
		},
		"403": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.unidirectional"
		},
		"404": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.ifNotExists"
		},
		"405": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.retry"
		},
		"406": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "__type"
		},
		"407": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "__type.attempts"
		},
		"408": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "__type.wait"
		},
		"409": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.batchSize"
		},
		"410": {
			"sourceFileName": "src/types/edge.ts",
			"qualifiedName": "ISpriteEdgeOptions.D"
		},
		"411": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ISpriteCreateArcadeUser"
		},
		"412": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ISpriteCreateArcadeUser.username"
		},
		"413": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ISpriteCreateArcadeUser.password"
		},
		"414": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ISpriteCreateArcadeUser.databases"
		},
		"415": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"416": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.__index"
		},
		"418": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "SpriteArcadeServerEvent"
		},
		"419": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"420": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.time"
		},
		"421": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.type"
		},
		"422": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.message"
		},
		"423": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "SpriteArcadeServerEvents"
		},
		"424": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"425": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.events"
		},
		"426": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.files"
		},
		"427": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerInformationLevel"
		},
		"428": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerBasicInformation"
		},
		"429": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"430": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.user"
		},
		"431": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.version"
		},
		"432": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.serverName"
		},
		"433": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerInfoSetting"
		},
		"434": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"435": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.key"
		},
		"436": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.value"
		},
		"437": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.description"
		},
		"438": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.overridden"
		},
		"439": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.default"
		},
		"440": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerInfoMetrics"
		},
		"441": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"442": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.meters"
		},
		"443": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"444": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.events"
		},
		"445": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"446": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.errors"
		},
		"447": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.warnings"
		},
		"448": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.info"
		},
		"449": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.hints"
		},
		"450": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.profiler"
		},
		"451": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"452": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.readCacheUsed"
		},
		"453": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.writeCacheUsed"
		},
		"454": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.cacheMax"
		},
		"455": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pagesRead"
		},
		"456": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pagesWritten"
		},
		"457": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pagesReadSize"
		},
		"458": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pagesWrittenSize"
		},
		"459": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pageFlushQueueLength"
		},
		"460": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.asyncQueueLength"
		},
		"461": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.asyncParallelLevel"
		},
		"462": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pageCacheHits"
		},
		"463": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pageCacheMiss"
		},
		"464": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.totalOpenFiles"
		},
		"465": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.maxOpenFiles"
		},
		"466": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.walPagesWritten"
		},
		"467": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.walBytesWritten"
		},
		"468": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.walTotalFiles"
		},
		"469": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.concurrentModificationExceptions"
		},
		"470": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.txCommits"
		},
		"471": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.txRollbacks"
		},
		"472": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.createRecord"
		},
		"473": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.readRecord"
		},
		"474": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.updateRecord"
		},
		"475": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.deleteRecord"
		},
		"476": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.queries"
		},
		"477": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.commands"
		},
		"478": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.scanType"
		},
		"479": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.scanBucket"
		},
		"480": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.iterateType"
		},
		"481": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.iterateBucket"
		},
		"482": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.countType"
		},
		"483": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.countBucket"
		},
		"484": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.evictionRuns"
		},
		"485": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.pagesEvicted"
		},
		"486": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.readCachePages"
		},
		"487": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.writeCachePages"
		},
		"488": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.indexCompactions"
		},
		"489": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.diskFreeSpace"
		},
		"490": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.diskTotalSpace"
		},
		"491": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.diskFreeSpacePerc"
		},
		"492": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.gcTime"
		},
		"493": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.ramHeapUsed"
		},
		"494": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.ramHeapMax"
		},
		"495": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.ramHeapAvailablePerc"
		},
		"496": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.ramOsUsed"
		},
		"497": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.ramOsTotal"
		},
		"498": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.cpuLoad"
		},
		"499": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.jvmSafePointTime"
		},
		"500": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.jvmSafePointCount"
		},
		"501": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.jvmAvgSafePointTime"
		},
		"502": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.totalDatabases"
		},
		"503": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.cpuCores"
		},
		"504": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.configuration"
		},
		"505": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerDefaultInformation"
		},
		"506": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"507": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.metrics"
		},
		"508": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.settings"
		},
		"509": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerClusterInformation"
		},
		"510": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"511": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "ArcadeServerInformation"
		},
		"512": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type"
		},
		"513": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.basic"
		},
		"514": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.default"
		},
		"515": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "__type.cluster"
		},
		"516": {
			"sourceFileName": "src/types/server.ts",
			"qualifiedName": "T"
		},
		"517": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "DeleteFromCount"
		},
		"518": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "__type"
		},
		"519": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "__type.count"
		},
		"520": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "ArcadeDeleteFromResponse"
		},
		"521": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "RecordOperationResponse"
		},
		"522": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "__type"
		},
		"523": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "__type.operation"
		},
		"524": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "__type.typeName"
		},
		"525": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "ArcadeCreateTypeResponse"
		},
		"526": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "ArcadeCreateEdgeResponse"
		},
		"527": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "E"
		},
		"528": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "N"
		},
		"529": {
			"sourceFileName": "src/types/operators.ts",
			"qualifiedName": "ArcadeUpdateOneResponse"
		}
	}
}